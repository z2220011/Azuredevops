app:
  description: ''
  icon: 🤖
  icon_background: '#FFEAD5'
  mode: advanced-chat
  name: merge-issue76-スケジュール調整AI
kind: app
version: 0.1.1
workflow:
  conversation_variables:
  - description: ''
    id: c75c03e0-b1cc-4b44-801b-a0a1518ce0d4
    name: payload
    value: ''
    value_type: string
  - description: ''
    id: 22c6b7da-a274-4c1d-aee0-dcec69529a8b
    name: end_date
    value: ''
    value_type: string
  - description: ''
    id: 0132a769-49af-4976-93b1-b0767acff8fd
    name: start_date
    value: ''
    value_type: string
  - description: ''
    id: 9c00a0d0-316c-484f-9f60-8dd6f3ec4355
    name: holidays
    value: []
    value_type: array[string]
  - description: ''
    id: 84b59b6f-9ad2-47cd-b21c-70863756708e
    name: exclusion_times
    value: ''
    value_type: string
  - description: ''
    id: f8f53b38-9c1f-4101-b8aa-18da63b0407d
    name: working_times
    value: ''
    value_type: string
  - description: 空き時間情報
    id: 87d7d600-09b7-45c7-9687-5c6ad4eb754a
    name: available_times
    value: ''
    value_type: string
  - description: 定時内での調整か、定時外での調整か
    id: f6ed8f48-d59a-49bd-8c68-c0184580f2b2
    name: based_on_business_hours
    value: 'False'
    value_type: string
  - description: 参加者のメールアドレスをカンマ区切りにしたもの。
    id: f5e0252c-7339-461c-9b83-7ed5705b1dc5
    name: address
    value: ''
    value_type: string
  - description: 推定された参加者。
    id: b1bb4158-9098-4e43-92bb-1eb52e2a0df2
    name: estimated_participants
    value: []
    value_type: array[object]
  - description: ''
    id: e61d6be6-a689-479a-8b8d-51232a6f10b4
    name: step
    value: 1
    value_type: number
  environment_variables:
  - description: ''
    id: dcc0bc85-ce43-459f-afd4-0d3c8622e52d
    name: tenant_id
    value: ''
    value_type: secret
  - description: ''
    id: 6f8f55ba-676a-4d94-a5f8-3a36d53c9faa
    name: client_secret
    value: ''
    value_type: secret
  - description: ''
    id: d7f6062c-29f7-47bf-ab8f-f3a9256bf831
    name: client_id
    value: ''
    value_type: secret
  features:
    file_upload:
      image:
        enabled: false
        number_limits: 3
        transfer_methods:
        - local_file
        - remote_url
    opening_statement: 'こんにちは！スケジュール調整のお手伝いをいたします。まず、まずは今回のミーティングに参加するメンバーを教えてください。


      --------

      **回答例**


      - 池田修一、自動車の飯塚

      - ikeda,iizuka'
    retriever_resource:
      enabled: false
    sensitive_word_avoidance:
      enabled: false
    speech_to_text:
      enabled: false
    suggested_questions: []
    suggested_questions_after_answer:
      enabled: false
    text_to_speech:
      enabled: false
      language: ''
      voice: ''
  graph:
    edges:
    - data:
        isInIteration: false
        sourceType: assigner
        targetType: answer
      id: 1724684829565-source-1724669003235-target
      selected: false
      source: '1724684829565'
      sourceHandle: source
      target: '1724669003235'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: code
        targetType: assigner
      id: 1724685039114-source-1724684829565-target
      selected: false
      source: '1724685039114'
      sourceHandle: source
      target: '1724684829565'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: code
        targetType: assigner
      id: 1724689981216-source-1724690070424-target
      selected: false
      source: '1724689981216'
      sourceHandle: source
      target: '1724690070424'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: code
        targetType: assigner
      id: 1724688842940-source-1724690805594-target
      selected: false
      source: '1724688842940'
      sourceHandle: source
      target: '1724690805594'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: if-else
        targetType: question-classifier
      id: 1724684610561-75a27092-5d4c-4658-9415-7756a2dac0d0-1724668674576-target
      selected: false
      source: '1724684610561'
      sourceHandle: 75a27092-5d4c-4658-9415-7756a2dac0d0
      target: '1724668674576'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: llm
        targetType: answer
      id: 1724716277005-source-1724717284776-target
      selected: false
      source: '1724716277005'
      sourceHandle: source
      target: '1724717284776'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: true
        iteration_id: '1724671575189'
        sourceType: code
        targetType: variable-aggregator
      id: 1725347210853-source-1725410361330-target
      selected: false
      source: '1725347210853'
      sourceHandle: source
      target: '1725410361330'
      targetHandle: target
      type: custom
      zIndex: 1002
    - data:
        isInIteration: true
        iteration_id: '1724671575189'
        sourceType: code
        targetType: variable-aggregator
      id: 1725410246681-source-1725410361330-target
      selected: false
      source: '1725410246681'
      sourceHandle: source
      target: '1725410361330'
      targetHandle: target
      type: custom
      zIndex: 1002
    - data:
        isInIteration: false
        sourceType: iteration
        targetType: code
      id: 1724671575189-source-1725414739631-target
      selected: false
      source: '1724671575189'
      sourceHandle: source
      target: '1725414739631'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: code
        targetType: assigner
      id: 1725414739631-source-1724688520612-target
      selected: false
      source: '1725414739631'
      sourceHandle: source
      target: '1724688520612'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: if-else
        targetType: answer
      id: 1725582909443-true-1725582938057-target
      selected: false
      source: '1725582909443'
      sourceHandle: 'true'
      target: '1725582938057'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: if-else
        targetType: code
      id: 1725582909443-false-1725583035244-target
      selected: false
      source: '1725582909443'
      sourceHandle: 'false'
      target: '1725583035244'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: code
        targetType: parameter-extractor
      id: 1725583035244-source-1724664147208-target
      selected: false
      source: '1725583035244'
      sourceHandle: source
      target: '1724664147208'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: parameter-extractor
        targetType: if-else
      id: 1724664147208-source-1725592441269-target
      selected: false
      source: '1724664147208'
      sourceHandle: source
      target: '1725592441269'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: if-else
        targetType: answer
      id: 1725592441269-true-1725592467979-target
      selected: false
      source: '1725592441269'
      sourceHandle: 'true'
      target: '1725592467979'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: code
        targetType: http-request
      id: 1727251498456-source-1727251707110-target
      selected: false
      source: '1727251498456'
      sourceHandle: source
      target: '1727251707110'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: http-request
        targetType: code
      id: 1727251707110-source-1727251822339-target
      selected: false
      source: '1727251707110'
      sourceHandle: source
      target: '1727251822339'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: code
        targetType: http-request
      id: 1727251901797-source-1727252035654-target
      selected: false
      source: '1727251901797'
      sourceHandle: source
      target: '1727252035654'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: http-request
        targetType: code
      id: 1727252035654-source-1727252112266-target
      selected: false
      source: '1727252035654'
      sourceHandle: source
      target: '1727252112266'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: code
        targetType: code
      id: 1727252112266-source-1727252290226-target
      selected: false
      source: '1727252112266'
      sourceHandle: source
      target: '1727252290226'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: start
        targetType: if-else
      id: 1724663548765-source-1724684610561-target
      selected: false
      source: '1724663548765'
      sourceHandle: source
      target: '1724684610561'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: assigner
        targetType: code
      id: 1727310221154-source-1724685039114-target
      selected: false
      source: '1727310221154'
      sourceHandle: source
      target: '1724685039114'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: code
        targetType: variable-aggregator
      id: 1727310246418-source-1727310746680-target
      selected: false
      source: '1727310246418'
      sourceHandle: source
      target: '1727310746680'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: variable-aggregator
        targetType: assigner
      id: 1727310746680-source-1727310221154-target
      selected: false
      source: '1727310746680'
      sourceHandle: source
      target: '1727310221154'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: code
        targetType: variable-aggregator
      id: 17273106731170-source-1727310746680-target
      selected: false
      source: '17273106731170'
      sourceHandle: source
      target: '1727310746680'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: code
        targetType: assigner
      id: 1727252615094-source-1728519034672-target
      selected: false
      source: '1727252615094'
      sourceHandle: source
      target: '1728519034672'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: assigner
        targetType: code
      id: 1724690070424-source-1727251498456-target
      selected: false
      source: '1724690070424'
      sourceHandle: source
      target: '1727251498456'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: code
        targetType: code
      id: 1727251822339-source-1727251901797-target
      selected: false
      source: '1727251822339'
      sourceHandle: source
      target: '1727251901797'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: assigner
        targetType: if-else
      id: 1724688520612-source-1728530898275-target
      selected: false
      source: '1724688520612'
      sourceHandle: source
      target: '1728530898275'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: if-else
        targetType: code
      id: 1728530898275-true-1727310246418-target
      selected: false
      source: '1728530898275'
      sourceHandle: 'true'
      target: '1727310246418'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: if-else
        targetType: code
      id: 1728530898275-false-17273106731170-target
      selected: false
      source: '1728530898275'
      sourceHandle: 'false'
      target: '17273106731170'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: true
        iteration_id: '1724671575189'
        sourceType: if-else
        targetType: code
      id: 1725342628745-false-1725410246681-target
      selected: false
      source: '1725342628745'
      sourceHandle: 'false'
      target: '1725410246681'
      targetHandle: target
      type: custom
      zIndex: 1002
    - data:
        isInIteration: false
        sourceType: parameter-extractor
        targetType: code
      id: 17246874287790-source-1724688842940-target
      selected: false
      source: '17246874287790'
      sourceHandle: source
      target: '1724688842940'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: code
        targetType: assigner
      id: 1729175190062-source-1729175245853-target
      selected: false
      source: '1729175190062'
      sourceHandle: source
      target: '1729175245853'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: code
        targetType: answer
      id: 1729175423598-source-1729175270818-target
      selected: false
      source: '1729175423598'
      sourceHandle: source
      target: '1729175270818'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: assigner
        targetType: answer
      id: 1729175245853-source-1729175885840-target
      selected: false
      source: '1729175245853'
      sourceHandle: source
      target: '1729175885840'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: question-classifier
        targetType: code
      id: 1724668674576-2-1729175190062-target
      selected: false
      source: '1724668674576'
      sourceHandle: '2'
      target: '1729175190062'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: question-classifier
        targetType: parameter-extractor
      id: 1724668674576-1729175083088-17246874287790-target
      selected: false
      source: '1724668674576'
      sourceHandle: '1729175083088'
      target: '17246874287790'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: assigner
        targetType: code
      id: 1724690805594-source-1729175986261-target
      selected: false
      source: '1724690805594'
      sourceHandle: source
      target: '1729175986261'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: code
        targetType: assigner
      id: 1729175986261-source-1729176044844-target
      selected: false
      source: '1729175986261'
      sourceHandle: source
      target: '1729176044844'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: assigner
        targetType: answer
      id: 1729176044844-source-1724689069361-target
      selected: false
      source: '1729176044844'
      sourceHandle: source
      target: '1724689069361'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: if-else
        targetType: question-classifier
      id: 1724684610561-08c1563f-2b26-417a-8809-b1c69dbf022c-1729176093466-target
      selected: false
      source: '1724684610561'
      sourceHandle: 08c1563f-2b26-417a-8809-b1c69dbf022c
      target: '1729176093466'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: question-classifier
        targetType: code
      id: 1729176093466-1-1729176193190-target
      selected: false
      source: '1729176093466'
      sourceHandle: '1'
      target: '1729176193190'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: code
        targetType: assigner
      id: 1729176193190-source-1729176240096-target
      selected: false
      source: '1729176193190'
      sourceHandle: source
      target: '1729176240096'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: assigner
        targetType: code
      id: 1729176240096-source-1729175423598-target
      selected: false
      source: '1729176240096'
      sourceHandle: source
      target: '1729175423598'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: question-classifier
        targetType: code
      id: 1729176093466-2-1724689981216-target
      selected: false
      source: '1729176093466'
      sourceHandle: '2'
      target: '1724689981216'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: if-else
        targetType: question-classifier
      id: 1724684610561-false-1729402806019-target
      selected: false
      source: '1724684610561'
      sourceHandle: 'false'
      target: '1729402806019'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: question-classifier
        targetType: answer
      id: 1729402806019-1-1729403028681-target
      selected: false
      source: '1729402806019'
      sourceHandle: '1'
      target: '1729403028681'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: assigner
        targetType: llm
      id: 1728519034672-source-1724716277005-target
      selected: false
      source: '1728519034672'
      sourceHandle: source
      target: '1724716277005'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: code
        targetType: assigner
      id: 1727252290226-source-1729404163513-target
      selected: false
      source: '1727252290226'
      sourceHandle: source
      target: '1729404163513'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: assigner
        targetType: assigner
      id: 1729404163513-source-1729404201236-target
      selected: false
      source: '1729404163513'
      sourceHandle: source
      target: '1729404201236'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: assigner
        targetType: assigner
      id: 1729404338268-source-1729404378589-target
      selected: false
      source: '1729404338268'
      sourceHandle: source
      target: '1729404378589'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: assigner
        targetType: assigner
      id: 1729404378589-source-1729404428309-target
      selected: false
      source: '1729404378589'
      sourceHandle: source
      target: '1729404428309'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: llm
        targetType: answer
      id: 17294031324280-source-1729484518506-target
      selected: false
      source: '17294031324280'
      sourceHandle: source
      target: '1729484518506'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: if-else
        targetType: iteration
      id: 1725592441269-false-1724671575189-target
      selected: false
      source: '1725592441269'
      sourceHandle: 'false'
      target: '1724671575189'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: question-classifier
        targetType: answer
      id: 1729402806019-1729483823544-1729484406610-target
      selected: false
      source: '1729402806019'
      sourceHandle: '1729483823544'
      target: '1729484406610'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: question-classifier
        targetType: question-classifier
      id: 1729402806019-2-1729660439862-target
      selected: false
      source: '1729402806019'
      sourceHandle: '2'
      target: '1729660439862'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: question-classifier
        targetType: llm
      id: 1729660439862-2-17294031324280-target
      selected: false
      source: '1729660439862'
      sourceHandle: '2'
      target: '17294031324280'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: question-classifier
        targetType: answer
      id: 1729660439862-1-1729660641962-target
      selected: false
      source: '1729660439862'
      sourceHandle: '1'
      target: '1729660641962'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: assigner
        targetType: assigner
      id: 1729404201236-source-1729404338268-target
      selected: false
      source: '1729404201236'
      sourceHandle: source
      target: '1729404338268'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: assigner
        targetType: code
      id: 1729696467433-source-1727252615094-target
      selected: false
      source: '1729696467433'
      sourceHandle: source
      target: '1727252615094'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: assigner
        targetType: assigner
      id: 1729404428309-source-1729696467433-target
      selected: false
      source: '1729404428309'
      sourceHandle: source
      target: '1729696467433'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: question-classifier
        targetType: http-request
      id: 1729402806019-1729402844349-1729696985461-target
      selected: false
      source: '1729402806019'
      sourceHandle: '1729402844349'
      target: '1729696985461'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: http-request
        targetType: code
      id: 1729696985461-source-1729697165815-target
      selected: false
      source: '1729696985461'
      sourceHandle: source
      target: '1729697165815'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: code
        targetType: http-request
      id: 1729697165815-source-1729696613581-target
      selected: false
      source: '1729697165815'
      sourceHandle: source
      target: '1729696613581'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: http-request
        targetType: code
      id: 1729696613581-source-1729697280782-target
      selected: false
      source: '1729696613581'
      sourceHandle: source
      target: '1729697280782'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: code
        targetType: code
      id: 1729697280782-source-1729403585014-target
      selected: false
      source: '1729697280782'
      sourceHandle: source
      target: '1729403585014'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: true
        iteration_id: '1731895655350'
        sourceType: knowledge-retrieval
        targetType: if-else
      id: 1731895695949-source-1731896601287-target
      selected: false
      source: '1731895695949'
      sourceHandle: source
      target: '1731896601287'
      targetHandle: target
      type: custom
      zIndex: 1002
    - data:
        isInIteration: false
        sourceType: code
        targetType: answer
      id: 1731897570544-source-1729485334320-target
      selected: false
      source: '1731897570544'
      sourceHandle: source
      target: '1729485334320'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: true
        iteration_id: '1731895655350'
        sourceType: code
        targetType: if-else
      id: 1731898572900-source-1731898754758-target
      selected: false
      source: '1731898572900'
      sourceHandle: source
      target: '1731898754758'
      targetHandle: target
      type: custom
      zIndex: 1002
    - data:
        isInIteration: true
        iteration_id: '1731895655350'
        sourceType: if-else
        targetType: knowledge-retrieval
      id: 1731898754758-true-1731895695949-target
      selected: false
      source: '1731898754758'
      sourceHandle: 'true'
      target: '1731895695949'
      targetHandle: target
      type: custom
      zIndex: 1002
    - data:
        isInIteration: true
        iteration_id: '1731895655350'
        sourceType: if-else
        targetType: code
      id: 1731896601287-false-1731896624716-target
      selected: false
      source: '1731896601287'
      sourceHandle: 'false'
      target: '1731896624716'
      targetHandle: target
      type: custom
      zIndex: 1002
    - data:
        isInIteration: true
        iteration_id: '1731895655350'
        sourceType: code
        targetType: variable-aggregator
      id: 1731896624716-source-1732022414666-target
      selected: false
      source: '1731896624716'
      sourceHandle: source
      target: '1732022414666'
      targetHandle: target
      type: custom
      zIndex: 1002
    - data:
        isInIteration: true
        iteration_id: '1731895655350'
        sourceType: if-else
        targetType: variable-aggregator
      id: 1731898754758-false-1732022414666-target
      selected: false
      source: '1731898754758'
      sourceHandle: 'false'
      target: '1732022414666'
      targetHandle: target
      type: custom
      zIndex: 1002
    - data:
        isInIteration: false
        sourceType: if-else
        targetType: knowledge-retrieval
      id: 1724684610561-true-1732142701121-target
      source: '1724684610561'
      sourceHandle: 'true'
      target: '1732142701121'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: knowledge-retrieval
        targetType: if-else
      id: 1732142701121-source-1725582909443-target
      source: '1732142701121'
      sourceHandle: source
      target: '1725582909443'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: true
        iteration_id: '1724671575189'
        sourceType: code
        targetType: knowledge-retrieval
      id: 1725426580641-source-1732143228684-target
      source: '1725426580641'
      sourceHandle: source
      target: '1732143228684'
      targetHandle: target
      type: custom
      zIndex: 1002
    - data:
        isInIteration: true
        iteration_id: '1724671575189'
        sourceType: knowledge-retrieval
        targetType: if-else
      id: 1732143228684-source-1725342628745-target
      source: '1732143228684'
      sourceHandle: source
      target: '1725342628745'
      targetHandle: target
      type: custom
      zIndex: 1002
    - data:
        isInIteration: true
        iteration_id: '1724671575189'
        sourceType: if-else
        targetType: knowledge-retrieval
      id: 1725342628745-true-1732143337675-target
      source: '1725342628745'
      sourceHandle: 'true'
      target: '1732143337675'
      targetHandle: target
      type: custom
      zIndex: 1002
    - data:
        isInIteration: true
        iteration_id: '1724671575189'
        sourceType: knowledge-retrieval
        targetType: code
      id: 1732143337675-source-1725347210853-target
      source: '1732143337675'
      sourceHandle: source
      target: '1725347210853'
      targetHandle: target
      type: custom
      zIndex: 1002
    - data:
        isInIteration: false
        sourceType: code
        targetType: if-else
      id: 1729403585014-source-1732144330538-target
      source: '1729403585014'
      sourceHandle: source
      target: '1732144330538'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: if-else
        targetType: iteration
      id: 1732144330538-true-1731895655350-target
      source: '1732144330538'
      sourceHandle: 'true'
      target: '1731895655350'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: iteration
        targetType: if-else
      id: 1731895655350-source-1732153501305-target
      source: '1731895655350'
      sourceHandle: source
      target: '1732153501305'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: if-else
        targetType: code
      id: 1732153501305-false-1731897570544-target
      source: '1732153501305'
      sourceHandle: 'false'
      target: '1731897570544'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: if-else
        targetType: answer
      id: 1732144330538-false-1732144424631-target
      source: '1732144330538'
      sourceHandle: 'false'
      target: '1732144424631'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: if-else
        targetType: answer
      id: 1732153501305-true-17321535881410-target
      source: '1732153501305'
      sourceHandle: 'true'
      target: '17321535881410'
      targetHandle: target
      type: custom
      zIndex: 0
    nodes:
    - data:
        desc: ''
        selected: false
        title: 開始
        type: start
        variables:
        - label: '空き状況取得の開始日（例: yyyy/mm/dd）※未入力の場合は本日から'
          max_length: 48
          options: []
          required: false
          type: text-input
          variable: availability_start_date
        - label: 空き状況を取得する日数(未入力の場合、7日間)
          max_length: 48
          options: []
          required: false
          type: number
          variable: availability_number_of_date
        - label: 会議時間（分）
          max_length: 48
          options: []
          required: true
          type: number
          variable: conferenceTime
        - label: その他希望
          max_length: 100
          options: []
          required: false
          type: text-input
          variable: other_request
        - label: あなたのメールアドレス
          max_length: 48
          options: []
          required: true
          type: text-input
          variable: user_address
        - label: 定時外を含めるか？
          max_length: 48
          options:
          - 含める
          - ''
          required: false
          type: select
          variable: include_out_of_business_hours
      height: 220
      id: '1724663548765'
      position:
        x: -25.037630948345395
        y: 292.3249585158701
      positionAbsolute:
        x: -25.037630948345395
        y: 292.3249585158701
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        desc: 参加者についての入力からリストを抽出
        instruction: ''
        memory:
          query_prompt_template: ''
          role_prefix:
            assistant: ''
            user: ''
          window:
            enabled: false
            size: 50
        model:
          completion_params:
            temperature: 0
          mode: chat
          name: gpt4o-CTC-ScheduleOpenAI
          provider: azure_openai
        parameters:
        - description: Target group for scheduling
          name: participants_list
          required: true
          type: array[string]
        query:
        - sys
        - query
        reasoning_mode: prompt
        selected: false
        title: 参加者について入力からリストを抽出
        type: parameter-extractor
        variables: []
      height: 126
      id: '1724664147208'
      position:
        x: 1904.905594591443
        y: 328.41704746463733
      positionAbsolute:
        x: 1904.905594591443
        y: 328.41704746463733
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        classes:
        - id: '2'
          name: '戻る、と指定している。

            '
        - id: '1729175083088'
          name: 数字を指定している。
        desc: ''
        instructions: ''
        model:
          completion_params:
            temperature: 0
          mode: chat
          name: gpt4o-CTC-ScheduleOpenAI
          provider: azure_openai
        query_variable_selector:
        - '1724663548765'
        - sys.query
        selected: false
        title: 提示した参加者で同意しているか？
        topics: []
        type: question-classifier
      height: 184
      id: '1724668674576'
      position:
        x: 886.5913758357708
        y: 685.1674218470788
      positionAbsolute:
        x: 886.5913758357708
        y: 685.1674218470788
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        answer: "ありがとうございます！確認いたしますね。\n\n入力いただいた内容から、該当の参加者の候補をリストアップしました。\n\n**数字を指定して、該当の参加者をお選びください！**\n\
          \n{{#1725414739631.output_text#}}\n\n--------\n**回答例**\n\n■参加者を指定\n  **1,3,5**\n\
          \n■参加者の入力に戻りたい場合、「戻る」と入力ください。\n**戻る**\n\n\n\n\n\n"
        desc: 参加者を確認する
        selected: false
        title: 【STEP2 参加者指定】
        type: answer
        variables: []
      height: 246
      id: '1724669003235'
      position:
        x: 7502.992534253385
        y: 379.1582430314195
      positionAbsolute:
        x: 7502.992534253385
        y: 379.1582430314195
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        desc: 抽出された参加者リストの参加者毎に、ナレッジにおいて検索をかけ、類似度の高い「2つ」を抽出する。
        height: 455.67515903740923
        iterator_selector:
        - '1724664147208'
        - participants_list
        output_selector:
        - '1725410361330'
        - output
        output_type: array[string]
        selected: false
        startNodeType: code
        start_node_id: '1725426580641'
        title: 参加者の候補だし
        type: iteration
        width: 2433.425650822501
      height: 456
      id: '1724671575189'
      position:
        x: 2528.001490887992
        y: 406.3305194161883
      positionAbsolute:
        x: 2528.001490887992
        y: 406.3305194161883
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 2433
      zIndex: 1
    - data:
        cases:
        - case_id: 'true'
          conditions:
          - comparison_operator: '='
            id: 2adbc1be-1685-4d81-84bd-9771e162397a
            value: '1'
            varType: number
            variable_selector:
            - conversation
            - step
          id: 'true'
          logical_operator: and
        - case_id: 75a27092-5d4c-4658-9415-7756a2dac0d0
          conditions:
          - comparison_operator: '='
            id: 335595a0-97b2-434e-9e36-7a511dd35657
            value: '2'
            varType: number
            variable_selector:
            - conversation
            - step
          id: 75a27092-5d4c-4658-9415-7756a2dac0d0
          logical_operator: and
        - case_id: 08c1563f-2b26-417a-8809-b1c69dbf022c
          conditions:
          - comparison_operator: '='
            id: ef0e8aea-5e88-402a-b7ff-8698caab7dac
            value: '3'
            varType: number
            variable_selector:
            - conversation
            - step
          id: 08c1563f-2b26-417a-8809-b1c69dbf022c
          logical_operator: and
        desc: stepの値による条件分岐
        selected: false
        title: stepの値による条件分岐
        type: if-else
      height: 250
      id: '1724684610561'
      position:
        x: 341.31106643838336
        y: 292.3249585158701
      positionAbsolute:
        x: 341.31106643838336
        y: 292.3249585158701
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        assigned_variable_selector:
        - conversation
        - step
        desc: 会話変数stepに用意した数値型を代入
        input_variable_selector:
        - '1724685039114'
        - step
        selected: false
        title: STEPを進める(値の代入)
        type: assigner
        write_mode: over-write
      height: 160
      id: '1724684829565'
      position:
        x: 7167.41062374278
        y: 468.8847809639762
      positionAbsolute:
        x: 7167.41062374278
        y: 468.8847809639762
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        code: "\ndef main(step: int) -> dict:\n    return {\n        \"step\": step\
          \ + 1\n    }\n"
        code_language: python3
        desc: STEP1に更新するための数値型を用意
        outputs:
          step:
            children: null
            type: number
        selected: false
        title: STEPを進める(値の準備)
        type: code
        variables:
        - value_selector:
          - conversation
          - step
          variable: step
      height: 82
      id: '1724685039114'
      position:
        x: 7167.41062374278
        y: 379.1582430314195
      positionAbsolute:
        x: 7167.41062374278
        y: 379.1582430314195
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        desc: ''
        instruction: '# 命令

          {{#sys.query#}}で指定された数字をリストにして、パラメータ「num」に格納してください。


          # 例１

          sys.quey→「1,2,5」

          num = [1,2,5]

          # 例１

          sys.quey→「1.2.5」

          num = [1,2,5]


          '
        model:
          completion_params: {}
          mode: chat
          name: gpt4o-CTC-ScheduleOpenAI
          provider: azure_openai
        parameters:
        - description: ユーザが指定した数字のリスト
          name: specified_num
          required: true
          type: array[number]
        query:
        - sys
        - query
        reasoning_mode: prompt
        selected: false
        title: 参加者の抽出
        type: parameter-extractor
        variables: []
      height: 98
      id: '17246874287790'
      position:
        x: 1242.571023473466
        y: 873.7753195168506
      positionAbsolute:
        x: 1242.571023473466
        y: 873.7753195168506
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        assigned_variable_selector:
        - conversation
        - estimated_participants
        desc: 人物の検索結果の出力を整形してまとめたものを、会話変数に記録。後の「参加者の再抽出」ブロックの際に、これを参照にするため、記録する。
        input_variable_selector:
        - '1725414739631'
        - estimated_participants
        selected: false
        title: 候補者リストの記録
        type: assigner
        write_mode: over-write
      height: 208
      id: '1724688520612'
      position:
        x: 5444.676198875003
        y: 345.57065030468493
      positionAbsolute:
        x: 5444.676198875003
        y: 345.57065030468493
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        code: "\ndef main(estimated_participants: list, specified_num: list, user_address:str)\
          \ -> dict:\n    # 結果を格納する変数を用意\n    output_text = \"\"\n    address_data\
          \ = []\n    new_estimated_participants = []\n\n    # 指定された参加者の抽出処理\n   \
          \ for num in specified_num:\n        \n        for index, part_dict in enumerate(estimated_participants):\n\
          \            if index == (num-1):\n                # 出力テキストの準備\n       \
          \         output_text += f\"\\n■ {part_dict['department']} {part_dict['section']}：\\\
          n{part_dict['name']} : {part_dict['mail']}\\n\\n\"\n                # 指定された参加者リストを準備\n\
          \                new_estimated_participants.append(part_dict)\n        \
          \        # メールアドレスリストの準備\n                address_data.append(part_dict['mail'])\n\
          \                break\n\n\n\n    # ユーザアドレスをリストに追加\n    address_data.append(user_address)\n\
          \    address_string = ','.join(address_data)\n\n\n    # 抽出結果を辞書にして返す\n \
          \   return {\n        \"output_text\": output_text,\n        \"address_data\"\
          : address_string,\n        \"new_estimated_participants\": new_estimated_participants\n\
          \    }"
        code_language: python3
        desc: 人物の検索結果（JSON）から必要な情報を抽出し、出力テキストおよびアドレス情報（カンマ区切り）を準備する。
        outputs:
          address_data:
            children: null
            type: string
          new_estimated_participants:
            children: null
            type: array[object]
          output_text:
            children: null
            type: string
        selected: false
        title: 指定された参加者の、アドレスおよび出力テキスト準備
        type: code
        variables:
        - value_selector:
          - conversation
          - estimated_participants
          variable: estimated_participants
        - value_selector:
          - '17246874287790'
          - specified_num
          variable: specified_num
        - value_selector:
          - '1724663548765'
          - user_address
          variable: user_address
      height: 114
      id: '1724688842940'
      position:
        x: 1601.6708561610346
        y: 873.7753195168506
      positionAbsolute:
        x: 1601.6708561610346
        y: 873.7753195168506
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        answer: "ありがとうございます！選んでいただいた参加者は以下の通りでお間違えないでしょうか？\n\n{{#1724688842940.output_text#}}\n\
          \n--------\n**回答例**\n\n■このままで良い場合\n  **はい**\n\n■候補から参加者を指定するところに戻りたい場合、「戻る」と入力ください。\n\
          **戻る**"
        desc: 推定参加者があっているかを確認する。
        selected: false
        title: 【STEP3 参加者確認】
        type: answer
        variables: []
      height: 230
      id: '1724689069361'
      position:
        x: 2552.2185507268537
        y: 873.7753195168506
      positionAbsolute:
        x: 2552.2185507268537
        y: 873.7753195168506
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        code: "def main(step:int) -> dict:\n    return {\n        \"step\": step +\
          \ 1\n    }\n"
        code_language: python3
        desc: STEP0に更新するための数値型を用意
        outputs:
          step:
            children: null
            type: number
        selected: false
        title: STEPを進める(値の準備)
        type: code
        variables:
        - value_selector:
          - conversation
          - step
          variable: step
      height: 82
      id: '1724689981216'
      position:
        x: 1249.4632136034484
        y: 1576.8160474451417
      positionAbsolute:
        x: 1249.4632136034484
        y: 1576.8160474451417
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        assigned_variable_selector:
        - conversation
        - step
        desc: 会話変数stepに用意した数値型を代入
        input_variable_selector:
        - '1724689981216'
        - step
        selected: false
        title: STEPを進める(値の代入)
        type: assigner
        write_mode: over-write
      height: 160
      id: '1724690070424'
      position:
        x: 1249.4632136034484
        y: 1659.5223290049282
      positionAbsolute:
        x: 1249.4632136034484
        y: 1659.5223290049282
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        assigned_variable_selector:
        - conversation
        - address
        desc: '人物の検索結果からに抽出したアドレスを会話変数に記録する。後に、メールアドレス情報から予定取得をするため必要。

          '
        input_variable_selector:
        - '1724688842940'
        - address_data
        selected: false
        title: 指定された参加者のアドレスを記録
        type: assigner
        write_mode: over-write
      height: 192
      id: '1724690805594'
      position:
        x: 1904.905594591443
        y: 873.7753195168506
      positionAbsolute:
        x: 1904.905594591443
        y: 873.7753195168506
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        context:
          enabled: true
          variable_selector:
          - conversation
          - available_times
        desc: 抽出された共通空き時間から、ユーザのニーズに合った空き時間を抽出する。
        model:
          completion_params:
            temperature: 0
          mode: chat
          name: gpt4o-CTC-ScheduleOpenAI
          provider: azure_openai
        prompt_template:
        - id: 6ce51b9d-0849-4c8a-801e-1eda99f432e6
          role: system
          text: "# 命令\n取得した共通の空き時間の中から最大3つ選び、提示してください。焦って答えは出さず、時間をかけて慎重に回答してください。\n\
            \n# 共通の空き時間\n{{#context#}}\n\n# 手順\n1. 「共通の空き時間」を確認してください。\n　1-1 空き時間（xx:xx-xx:xx）が存在する場合\n\
            　　次の手順2に進んでください。\n　1-2 空き時間（xx:xx-xx:xx）が存在しない場合\n　　「出力例1」を出力してください。\n\
            2. ユーザから「「その他要望」を受け取ったか？\n　2-1 受け取った場合\n　　「共通の空き時間」を参照し、ユーザの希望にあった日時を最大３つ選択してください。希望に沿った日時が１つもない場合、　「出力例1」を出力してください。\n\
            　2-2 受け取ってない場合\n　　「共通の空き時間」を参照し、一番早い日付から３つ選択してください。\n3. 「出力形式」と「出力例2」に沿って、選択した3つの空き時間を出力してください。\
            \ \n\n\n# その他要望\n{{#1724663548765.other_request#}}\n{{#sys.query#}}\n\n\
            # 出力形式\n以下は参加者の共通の空き時間です。リンクをクリックして、会議を設定してください。\n\n[日程](リンク)\n\n[日程](リンク)\n\
            \n[日程](リンク)\n\n\n# 出力例1\n適した空き時間は見つかりませんでした。\n\n**なお、参加者のカレンダーで、優先度が低そうな予定を探し、提示することもできます。**\n\
            \n# 出力例2\n以下は参加者の共通の空き時間です。リンクをクリックして、会議を設定してください。\n\n[2024年6月6日 16:00-16:30](https://outlook.office.com/calendar/deeplink/compose?path=/calendar/action/compose&startdt=2024-06-06T16:00:00&enddt=2024-06-06T16:30:00&subject='会議名を設定してください'&body='本文を記載してください。'&to={{#conversation.address#}})\n\
            \n[2024年6月6日 16:15-16:45](https://outlook.office.com/calendar/deeplink/compose?path=/calendar/action/compose&startdt=2024-06-06T16:15:00&enddt=2024-06-06T16:45:00&subject='会議名を設定してください'&body='本文を記載してください。'&to={{#conversation.address#}})\n\
            \n[2024年6月6日 16:30-17:00](https://outlook.office.com/calendar/deeplink/compose?path=/calendar/action/compose&startdt=2024-06-06T16:30:00&enddt=2024-06-06T17:00:00&subject='会議名を設定してください'&body='本文を記載してください。'&to={{#conversation.address#}})\n"
        selected: false
        title: ニーズに合った共通空き時間を抽出
        type: llm
        variables: []
        vision:
          configs:
            detail: high
          enabled: true
      height: 142
      id: '1724716277005'
      position:
        x: 3388.539861503168
        y: 2245.2171745319943
      positionAbsolute:
        x: 3388.539861503168
        y: 2245.2171745319943
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        answer: '了解しました！では、皆さんの空いている時間を確認しますね。

          少々お待ちください…



          {{#1724716277005.text#}}


          他にご希望や調整事項はございますか？


          --------

          **回答例**

          - 午後で調整したい

          - 10/23で探してほしい

          - 参加者のカレンダーで、優先度が低そうな予定を提示してほしい

          '
        desc: 抽出された空き時間とそのリンクを提示する。
        selected: false
        title: 共通空き時間を提示
        type: answer
        variables: []
      height: 230
      id: '1724717284776'
      position:
        x: 3686.5258535916523
        y: 2245.2171745319943
      positionAbsolute:
        x: 3686.5258535916523
        y: 2245.2171745319943
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        cases:
        - case_id: 'true'
          conditions:
          - comparison_operator: empty
            id: 903f12f9-5b58-4a7b-ba4d-0003d6178fb1
            value: ''
            varType: array[object]
            variable_selector:
            - '1732143228684'
            - result
          id: 'true'
          logical_operator: and
        desc: ''
        isInIteration: true
        iteration_id: '1724671575189'
        selected: false
        title: 検索結果は空か？
        type: if-else
      extent: parent
      height: 126
      id: '1725342628745'
      parentId: '1724671575189'
      position:
        x: 715.6226996181103
        y: 90.7887448470492
      positionAbsolute:
        x: 3243.6241905061024
        y: 497.1192642632375
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
      zIndex: 1002
    - data:
        code: "\ndef main(data: list, item: str, user_dept:str) -> dict:\n    # 最終出力のリストを準備\n\
          \    result_list = []\n\n    # 部門ごとにデータを分類\n    priority_part = []\n   \
          \ other_part = []\n\n\n    # データの抽出処理\n    for entry in data:\n        content\
          \ = entry[\"content\"]\n        \n        # セミコロンで分割\n        pairs = content.split(';')\n\
          \n        # 検索結果の人のデータを、辞書に変換\n        result_dict = {}\n        for pair\
          \ in pairs:\n            key, value = pair.split(':', 1)  # 最初のコロンで分割\n\
          \            key = key.strip().strip('\"')  # キーの前後の空白と二重引用符を削除\n      \
          \      value = value.strip().strip('\"')  # 値の前後の空白と二重引用符を削除\n         \
          \   result_dict[key] = value\n        \n        # 必要なフィールドを抽出\n        department\
          \ = result_dict[\"部\"]\n        section = result_dict[\"課\"]\n        mail\
          \ = result_dict[\"メールアドレス\"]\n        name = result_dict[\"氏名\"]\n\n   \
          \     # フォーマットされた情報を作成\n        formatted_dict = {\"department\":department,\
          \ \"section\":section, \"mail\":mail, \"name\":name, \"keyword\":item}\n\
          \        \n        # ユーザと同じの部の場合は優先リストに、それ以外は通常リストに追加\n        if department\
          \ == user_dept:\n            priority_part.append(formatted_dict)\n    \
          \    else:\n            other_part.append(formatted_dict)\n    \n    # リストの連結\n\
          \    result_list = priority_part + other_part\n\n    # 抽出結果を辞書にして返す\n  \
          \  return {\n        \"result_list\": result_list,\n    }"
        code_language: python3
        desc: ''
        isInIteration: true
        iteration_id: '1724671575189'
        outputs:
          result_list:
            children: null
            type: array[object]
        selected: false
        title: 出力テキストの準備（ハイブリット検索）
        type: code
        variables:
        - value_selector:
          - '1732143337675'
          - result
          variable: data
        - value_selector:
          - '1724671575189'
          - item
          variable: item
        - value_selector:
          - '1725583035244'
          - user_department
          variable: user_dept
      extent: parent
      height: 54
      id: '1725347210853'
      parentId: '1724671575189'
      position:
        x: 1462.0197088335694
        y: 90.22330337977667
      positionAbsolute:
        x: 3990.0211997215615
        y: 496.55382279596495
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
      zIndex: 1002
    - data:
        code: "\ndef main(data: list, item: str, user_dept:str) -> dict:\n    # 最終出力のリストを準備\n\
          \    result_list = []\n\n    # 部門ごとにデータを分類\n    priority_part = []\n   \
          \ other_part = []\n\n\n    # データの抽出処理\n    for entry in data:\n        content\
          \ = entry[\"content\"]\n        \n        # セミコロンで分割\n        pairs = content.split(';')\n\
          \n        # 検索結果の人のデータを、辞書に変換\n        result_dict = {}\n        for pair\
          \ in pairs:\n            key, value = pair.split(':', 1)  # 最初のコロンで分割\n\
          \            key = key.strip().strip('\"')  # キーの前後の空白と二重引用符を削除\n      \
          \      value = value.strip().strip('\"')  # 値の前後の空白と二重引用符を削除\n         \
          \   result_dict[key] = value\n        \n        # 必要なフィールドを抽出\n        department\
          \ = result_dict[\"部\"]\n        section = result_dict[\"課\"]\n        mail\
          \ = result_dict[\"メールアドレス\"]\n        name = result_dict[\"氏名\"]\n\n   \
          \     # フォーマットされた情報を作成\n        formatted_dict = {\"department\":department,\
          \ \"section\":section, \"mail\":mail, \"name\":name, \"keyword\":item}\n\
          \        \n        # ユーザと同じの部の場合は優先リストに、それ以外は通常リストに追加\n        if department\
          \ == user_dept:\n            priority_part.append(formatted_dict)\n    \
          \    else:\n            other_part.append(formatted_dict)\n    \n    # リストの連結\n\
          \    result_list = priority_part + other_part\n\n    # 抽出結果を辞書にして返す\n  \
          \  return {\n        \"result_list\": result_list,\n    }"
        code_language: python3
        desc: ''
        isInIteration: true
        iteration_id: '1724671575189'
        outputs:
          result_list:
            children: null
            type: array[object]
        selected: false
        title: 出力テキストの準備（キーワード検索）
        type: code
        variables:
        - value_selector:
          - '1732143228684'
          - result
          variable: data
        - value_selector:
          - '1724671575189'
          - item
          variable: item
        - value_selector:
          - '1725583035244'
          - user_department
          variable: user_dept
      extent: parent
      height: 54
      id: '1725410246681'
      parentId: '1724671575189'
      position:
        x: 1075.9712645762743
        y: 288.67515903740923
      positionAbsolute:
        x: 3603.9727554642664
        y: 695.0056784535975
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
      zIndex: 1002
    - data:
        desc: ''
        isInIteration: true
        iteration_id: '1724671575189'
        output_type: string
        selected: false
        title: 出力テキストの変数集約
        type: variable-aggregator
        variables:
        - - '1725410246681'
          - result_list
        - - '1725347210853'
          - result_list
      extent: parent
      height: 138
      id: '1725410361330'
      parentId: '1724671575189'
      position:
        x: 2031.7931190346003
        y: 88.31950791077293
      positionAbsolute:
        x: 4559.794609922592
        y: 494.6500273269612
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
      zIndex: 1002
    - data:
        code: "import json\n\ndef main(data: list) -> dict:\n\n    output_text = \"\
          \"\n    keyword = \"\"\n    estimated_participants = []\n\n    for index,\
          \ part_dict in enumerate(data):\n        \n        num = index + 1 \n\n\
          \        if part_dict[\"keyword\"] != keyword:\n            keyword = part_dict[\"\
          keyword\"]\n            output_text += f\"--------\\n「{keyword}」\\n以下から候補を選んでください。\\\
          n\"\n\n        # 出力テキストの準備\n        output_text += f\"\\n{num}. {part_dict['department']}\
          \ {part_dict['section']}：\\n{part_dict['name']} : {part_dict['mail']}\\\
          n\\n\"\n\n        # 候補者リストの準備\n        estimated_participants.append(part_dict)\n\
          \n    return {\n        \"output_text\": output_text,\n        \"estimated_participants\"\
          : estimated_participants\n    }"
        code_language: python3
        desc: ''
        outputs:
          estimated_participants:
            children: null
            type: array[object]
          output_text:
            children: null
            type: string
        selected: false
        title: 出力テキストと候補者リストの準備
        type: code
        variables:
        - value_selector:
          - '1724671575189'
          - output
          variable: data
      height: 54
      id: '1725414739631'
      position:
        x: 5118.19852250873
        y: 345.57065030468493
      positionAbsolute:
        x: 5118.19852250873
        y: 345.57065030468493
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        code: "def main(item: str) -> dict:\n    # 半角スペースを取り除く\n    no_space_item\
          \ = item.replace(' ', '')\n    # 全角スペースを取り除く\n    no_space_item = no_space_item.replace('　',\
          \ '')\n    return {\n        \"no_space_item\": no_space_item\n    }\n"
        code_language: python3
        desc: フルネームによる検索はスペースがあると機能しないため
        isInIteration: true
        isIterationStart: true
        iteration_id: '1724671575189'
        outputs:
          no_space_item:
            children: null
            type: string
        selected: false
        title: スペースの削除
        type: code
        variables:
        - value_selector:
          - '1724671575189'
          - item
          variable: item
      extent: parent
      height: 98
      id: '1725426580641'
      parentId: '1724671575189'
      position:
        x: 115.25889887340782
        y: 90.7411011265923
      positionAbsolute:
        x: 2643.2603897614
        y: 497.0716205427806
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
      zIndex: 1002
    - data:
        cases:
        - case_id: 'true'
          conditions:
          - comparison_operator: empty
            id: 11d5b69d-e6a7-4ec0-8b00-4be582df112f
            value: ''
            varType: array[object]
            variable_selector:
            - '1732142701121'
            - result
          id: 'true'
          logical_operator: and
        desc: ''
        selected: false
        title: ユーザの検索結果は空か？
        type: if-else
      height: 126
      id: '1725582909443'
      position:
        x: 1249.4632136034484
        y: 328.41704746463733
      positionAbsolute:
        x: 1249.4632136034484
        y: 328.41704746463733
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        answer: '開始画面で入力いただいたメールアドレスが不正のようです。


          画面上部の「リフレッシュマーク」からメールアドレスを再記入してください。'
        desc: ''
        selected: false
        title: メールアドレス記入ミス
        type: answer
        variables: []
      height: 152
      id: '1725582938057'
      position:
        x: 1558.014415819086
        y: 94.95389703738869
      positionAbsolute:
        x: 1558.014415819086
        y: 94.95389703738869
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        code: "def main(data: list) -> dict:\n    user_department = \"\"\n\n    #\
          \ データの抽出処理\n    for entry in data:\n        content = entry[\"content\"\
          ]\n        \n        # 必要なフィールドを抽出\n        department = content.split(\"\
          \\\"部\\\":\\\"\")[1].split(\"\\\"\")[0]\n        \n        # フォーマットされた行を作成し、文字列に追加\n\
          \        user_department = department\n        \n\n    # 抽出結果を辞書にして返す\n\
          \    return {\n        \"user_department\": user_department,\n    }\n"
        code_language: python3
        desc: ''
        outputs:
          user_department:
            children: null
            type: string
        selected: false
        title: ユーザの部情報の抽出
        type: code
        variables:
        - value_selector:
          - '1732142701121'
          - result
          variable: data
      height: 54
      id: '1725583035244'
      position:
        x: 1558.014415819086
        y: 328.41704746463733
      positionAbsolute:
        x: 1558.014415819086
        y: 328.41704746463733
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        cases:
        - case_id: 'true'
          conditions:
          - comparison_operator: empty
            id: 7c72f864-a1d8-4911-b412-3d1a68b3f694
            value: ''
            varType: array[string]
            variable_selector:
            - '1724664147208'
            - participants_list
          id: 'true'
          logical_operator: and
        desc: ''
        selected: false
        title: 参加者リストは空か？
        type: if-else
      height: 126
      id: '1725592441269'
      position:
        x: 2233.1813405116545
        y: 328.41704746463733
      positionAbsolute:
        x: 2233.1813405116545
        y: 328.41704746463733
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        answer: 'まずは今回のミーティングに参加するメンバーを教えてください。


          --------

          **回答例**


          - 池田修一、自動車の飯塚

          - ikeda,iizuka

          '
        desc: ''
        selected: false
        title: 参加者の再指定
        type: answer
        variables: []
      height: 136
      id: '1725592467979'
      position:
        x: 2616.0091972199707
        y: 94.95389703738869
      positionAbsolute:
        x: 2616.0091972199707
        y: 94.95389703738869
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        code: "from datetime import datetime, timedelta, timezone\n\ndef conver_startdate(date_str):\n\
          \    # 入力日付文字列を datetime オブジェクトに変換\n    dt = datetime.strptime(date_str,\
          \ \"%Y/%m/%d\")\n    \n    # 日本時間の00:00:00に設定\n    dt = dt.replace(hour=0,\
          \ minute=0, second=0)\n    \n    # 日本時間 (JST) のタイムゾーンを設定 (+9時間)\n    jst\
          \ = timezone(timedelta(hours=9))\n    \n    # JSTをタイムゾーンとして付加\n    jst_dt\
          \ = dt.replace(tzinfo=jst)\n    \n    # UTC に変換\n    utc_dt = jst_dt.astimezone(timezone.utc)\n\
          \    \n    # ISO 8601 形式で返す\n    return utc_dt.strftime(\"%Y-%m-%dT%H:%M:%SZ\"\
          )\n\ndef conver_enddate(date_str: str, numberOfDate: int):\n    # 入力日付文字列を\
          \ datetime オブジェクトに変換\n    dt = datetime.strptime(date_str, \"%Y/%m/%d\"\
          )\n    \n    # 日本時間の23:59:59に設定\n    dt = dt.replace(hour=23, minute=59,\
          \ second=59)\n    \n    # 日本時間 (JST) のタイムゾーンを設定 (+9時間)\n    jst = timezone(timedelta(hours=9))\n\
          \    \n    # JSTをタイムゾーンとして付加\n    jst_dt = dt.replace(tzinfo=jst)\n    \n\
          \    # UTC に変換\n    utc_dt = jst_dt.astimezone(timezone.utc)\n\n    # NumberOfDateを加算\n\
          \    end_datetime = utc_dt + timedelta(days=numberOfDate - 1)\n    \n  \
          \  # ISO 8601 形式で返す\n    return end_datetime.strftime(\"%Y-%m-%dT%H:%M:%SZ\"\
          )\n    \ndef get_end_datetime(days: int) -> str:\n    # 現在の日時をUTCで取得\n \
          \   now = datetime.now(timezone.utc)\n    \n    # 日本時間 (JST) に変換\n    jst\
          \ = timezone(timedelta(hours=9))\n    now_jst = now.astimezone(jst)\n  \
          \  \n    # 現在の日付の00:00:00 (日本時間) を作成\n    midnight_jst = datetime(now_jst.year,\
          \ now_jst.month, now_jst.day, 0, 0, 0, tzinfo=jst)\n    \n    \n    # 指定された日数後の日時を計算\
          \ (日本時間)\n    future_date_jst = midnight_jst + timedelta(days=days + 1)\n\
          \    \n    # 1秒を引いて23:59:59に設定\n    future_date_minus_one_second_jst = future_date_jst\
          \ - timedelta(seconds=1)\n    \n    # UTCに変換\n    future_date_utc = future_date_minus_one_second_jst.astimezone(timezone.utc)\n\
          \    \n    # 指定された形式でフォーマット\n    return future_date_utc.strftime('%Y-%m-%dT%H:%M:%SZ')\n\
          \ndef get_start_datetime() -> str:\n    # 現在の日時をUTCで取得\n    now = datetime.now(timezone.utc)\n\
          \    # 現在の日付の00:00:00を作成\n    # midnight = datetime(now.year, now.month,\
          \ now.day, 0, 0, 0, tzinfo=timezone.utc)\n    # 指定された形式でフォーマット\n    return\
          \ now.strftime('%Y-%m-%dT%H:%M:%SZ')\n\ndef convert_iso2text(iso_date_text)\
          \ -> dict:\n    # ISO8601形式の日付をパース\n    dt = datetime.strptime(iso_date_text,\
          \ '%Y-%m-%dT%H:%M:%SZ')\n    # UTCから9時間を加えて日本時間に変換\n    jst_dt = dt + timedelta(hours=9)\n\
          \    # フォーマットして返す\n    return jst_dt.strftime(\"%Y/%m/%d\")\n\n\ndef main(start_date,\
          \ number_of_date) -> dict:\n\n    #number_of_dateが空の場合に 7 をセットする\n    number_of_date\
          \ = number_of_date if number_of_date else 7\n\n    #空き時間取得開始日を決める\n    start_datetime\
          \ = conver_startdate(start_date) if start_date else get_start_datetime()\n\
          \    \n    #空き時間取得終了日を決める\n    end_datetime = conver_enddate(start_date,\
          \ number_of_date) if start_date else get_end_datetime(number_of_date) \n\
          \n    return {\n        \"start_datetime_iso\": start_datetime,\n      \
          \  \"end_datetime_iso\": end_datetime,\n        \"start_date\": convert_iso2text(start_datetime),\n\
          \        \"end_date\": convert_iso2text(end_datetime),\n\n    }"
        code_language: python3
        desc: ''
        outputs:
          end_date:
            children: null
            type: string
          end_datetime_iso:
            children: null
            type: string
          start_date:
            children: null
            type: string
          start_datetime_iso:
            children: null
            type: string
        selected: false
        title: 調整期間の取得
        type: code
        variables:
        - value_selector:
          - '1724663548765'
          - availability_start_date
          variable: start_date
        - value_selector:
          - '1724663548765'
          - availability_number_of_date
          variable: number_of_date
      height: 54
      id: '1727251498456'
      position:
        x: 1540.8608129790389
        y: 1955.7451890727411
      positionAbsolute:
        x: 1540.8608129790389
        y: 1955.7451890727411
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        authorization:
          config: null
          type: no-auth
        body:
          data: 'grant_type:client_credentials

            client_id:{{#env.client_id#}}

            scope:https://graph.microsoft.com/.default

            client_secret:{{#env.client_secret#}}'
          type: form-data
        desc: ''
        headers: Content-Type:application/x-www-form-urlencoded
        method: post
        params: ''
        selected: false
        timeout:
          max_connect_timeout: 0
          max_read_timeout: 0
          max_write_timeout: 0
        title: アクセストークンを取得
        type: http-request
        url: https://login.microsoftonline.com/{{#env.tenant_id#}}/oauth2/v2.0/token
        variables: []
      height: 124
      id: '1727251707110'
      position:
        x: 1856.4557310506018
        y: 1955.7451890727411
      positionAbsolute:
        x: 1856.4557310506018
        y: 1955.7451890727411
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        code: "\ndef main(response: int) -> dict:\n    # JSONテキストをパースして辞書に変換\n   \
          \ token_data = json.loads(response)\n\n    # アクセストークンを取り出す\n    access_token\
          \ = token_data.get('access_token')\n\n    return {\n        \"access_token\"\
          : access_token\n    }"
        code_language: python3
        desc: ''
        outputs:
          access_token:
            children: null
            type: string
        selected: false
        title: アクセストークンを変数にセット
        type: code
        variables:
        - value_selector:
          - '1727251707110'
          - body
          variable: response
      height: 54
      id: '1727251822339'
      position:
        x: 2161.7752389613743
        y: 1955.7451890727411
      positionAbsolute:
        x: 2161.7752389613743
        y: 1955.7451890727411
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        code: "\ndef main(emails,start_datetime,end_datetime) -> dict:\n\n    # メールアドレスのリスト\n\
          \    email_list = emails.split(\",\")\n\n    # イベントの期間（ISO 8601形式）\n   \
          \ start_date = start_datetime\n    end_date = end_datetime\n\n    # バッチリクエストのペイロードを作成\n\
          \    requests_payload = []\n    for i, email in enumerate(email_list):\n\
          \        requests_payload.append({\n            \"id\": str(i + 1),\n  \
          \          \"method\": \"GET\",\n            \"url\": f\"/users/{email}/calendarview?startDateTime={start_date}&endDateTime={end_date}&$filter=isCancelled\
          \ eq false&top=100&$select=subject,start,end,attendees,sensitivity,showAs,isAllDay,type,location\"\
          \n        })\n\n    batch_payload = {\n        \"requests\": requests_payload\n\
          \    }\n\n    # JSON形式のペイロードを出力\n    payload = json.dumps(batch_payload,\
          \ indent=2)\n\n    return {\n        \"result\": payload,\n    }"
        code_language: python3
        desc: ''
        outputs:
          result:
            children: null
            type: string
        selected: true
        title: ペイロード作成（イベント取得）
        type: code
        variables:
        - value_selector:
          - conversation
          - address
          variable: emails
        - value_selector:
          - '1727251498456'
          - start_datetime_iso
          variable: start_datetime
        - value_selector:
          - '1727251498456'
          - end_datetime_iso
          variable: end_datetime
      height: 54
      id: '1727251901797'
      position:
        x: 2445.055306906956
        y: 1955.7451890727411
      positionAbsolute:
        x: 2445.055306906956
        y: 1955.7451890727411
      selected: true
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        authorization:
          config: null
          type: no-auth
        body:
          data: '{{#1727251901797.result#}}'
          type: json
        desc: ''
        headers: 'Authorization:Bearer {{#1727251822339.access_token#}}

          Content-Type:application/json'
        method: post
        params: ''
        selected: false
        timeout:
          max_connect_timeout: 0
          max_read_timeout: 0
          max_write_timeout: 0
        title: メールアドレスからカレンダー情報を取得（バッチ）
        type: http-request
        url: https://graph.microsoft.com/v1.0/$batch
        variables: []
      height: 106
      id: '1727252035654'
      position:
        x: 2743.779160660655
        y: 1955.7451890727411
      positionAbsolute:
        x: 2743.779160660655
        y: 1955.7451890727411
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        code: "from datetime import datetime, timedelta\nfrom collections import defaultdict\n\
          import re\n\n# メールアドレスをデコードする\ndef decode_email(encoded_email):\n    decoding_map\
          \ = {\n        '%40': '@','%2E': '.','%2D': '-','%5F': '_','%2B': '+','%25':\
          \ '%','%20': ' '\n    }\n    \n    decoded_email = encoded_email\n    for\
          \ encoded_char, decoded_char in decoding_map.items():\n        decoded_email\
          \ = decoded_email.replace(encoded_char, decoded_char)\n    \n    return\
          \ decoded_email\n\n# 任意参加かどうか判定する\ndef check_optional(attendees, target_email)\
          \ -> bool:\n    if not attendees:\n        return False\n    \n    for attendee\
          \ in attendees:\n        if attendee.get('type') == 'optional' and attendee['emailAddress']['address']\
          \ == target_email:\n            return True\n    \n    return False\n\n\n\
          def main(response) -> dict:\n\n    # 必要なデータを抽出して整理\n    extracted_events\
          \ = {}\n    result = defaultdict(lambda: defaultdict(list))\n\n    # レスポンスを解析\n\
          \    responses = json.loads(response)['responses']\n    for response in\
          \ responses:\n        events = response['body']['value']\n        for event\
          \ in events:\n            # email = event['organizer']['emailAddress']['address']\n\
          \n            # 正規表現を使ってメールアドレスを抽出\n            email_pattern = r\"users\\\
          ('([^']+)'\\)\"\n            match = re.search(email_pattern, response['body']['@odata.context'])\n\
          \            # メールアドレスをデコード\n            email = decode_email(match.group(1))\n\
          \n            if event['sensitivity'] == 'private':\n                subject\
          \ = 'private'\n            else:\n                subject = event['subject']\n\
          \            start_time = event['start']['dateTime']\n            end_time\
          \ = event['end']['dateTime']\n           \n            # ISOフォーマットの日時を正規化\n\
          \            start_time = re.sub(r'\\.\\d+', '', start_time) + \"Z\"\n \
          \           end_time = re.sub(r'\\.\\d+', '', end_time) + \"Z\"\n      \
          \      \n            # datetimeオブジェクトに変換\n            start_dt = datetime.fromisoformat(start_time.replace(\"\
          Z\", \"+00:00\"))\n            end_dt = datetime.fromisoformat(end_time.replace(\"\
          Z\", \"+00:00\"))\n            \n            # 9時間加算\n            start_dt\
          \ += timedelta(hours=9)\n            end_dt += timedelta(hours=9)\n    \
          \        \n            # 日付だけを抽出\n            start_date = start_dt.date().isoformat()\n\
          \            end_date = end_dt.date().isoformat()\n            \n      \
          \      # 時間と分だけを抽出\n            start_hour = start_dt.strftime('%H:%M')\n\
          \            end_hour = end_dt.strftime('%H:%M')\n\n            # 終日の予定だった場合に、開始・終了時刻を設定\n\
          \            if event['isAllDay']:\n                start_hour = \"00:00\"\
          \n                end_hour = \"23:59\"\n\n            attendees = event['attendees']\n\
          \            is_optional = check_optional(attendees, email)\n\n        \
          \    result[email][start_date].append({\n                \"subject\": subject,\n\
          \                \"start\": start_hour,\n                \"end\": end_hour,\n\
          \                \"isOptional\": is_optional,\n                \"showAs\"\
          :event['showAs'],\n                \"isAllDay\":event['isAllDay'],\n   \
          \             \"type\":event['type'],\n                \"location\":event['location']['displayName'],\n\
          \            })\n\n    # 結果をJSON形式で表示\n    events = json.dumps(result,ensure_ascii=False)\n\
          \n    return {\n        \"calendar\": events,\n    }"
        code_language: python3
        desc: ''
        outputs:
          calendar:
            children: null
            type: string
        selected: false
        title: イベント加工
        type: code
        variables:
        - value_selector:
          - '1727252035654'
          - body
          variable: response
      height: 54
      id: '1727252112266'
      position:
        x: 3064.4557310506016
        y: 1955.7451890727411
      positionAbsolute:
        x: 3064.4557310506016
        y: 1955.7451890727411
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        author: difyadmin
        desc: ''
        height: 88
        selected: false
        showAuthor: true
        text: '{"root":{"children":[{"children":[{"detail":0,"format":1,"mode":"normal","style":"","text":"メールアドレスから予定取得","type":"text","version":1}],"direction":"ltr","format":"","indent":0,"type":"paragraph","version":1,"textFormat":1}],"direction":"ltr","format":"","indent":0,"type":"root","version":1}}'
        theme: blue
        title: ''
        type: ''
        width: 240
      height: 88
      id: '1727252215290'
      position:
        x: 1242.571023473466
        y: 1934.6868075196137
      positionAbsolute:
        x: 1242.571023473466
        y: 1934.6868075196137
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom-note
      width: 240
    - data:
        code: "\ndef main(based_on_business_hours) -> dict:\n\n    workingTime = \"\
          09:00-17:30\" if based_on_business_hours == \"True\" else \"07:00-22:00\"\
          \n\n    return {\n        \"exclusion_times\" : \"12:00-13:00\",\n     \
          \   \"working_times\" : workingTime,\n        \"holidays\":[\n        '2024-01-01',\
          \ '2024-01-08', '2024-02-11',\n        '2024-02-12', '2024-02-23', '2024-03-20',\
          \ '2024-04-29', '2024-05-03',\n        '2024-05-04', '2024-05-05', '2024-05-06',\
          \ '2024-07-15', '2024-08-11',\n        '2024-08-12', '2024-09-16', '2024-09-22',\
          \ '2024-09-23', '2024-10-14',\n        '2024-11-03', '2024-11-04', '2024-11-23'\n\
          \        ] \n    }"
        code_language: python3
        desc: ''
        outputs:
          exclusion_times:
            children: null
            type: string
          holidays:
            children: null
            type: array[string]
          working_times:
            children: null
            type: string
        selected: false
        title: 祝日・定時の設定
        type: code
        variables:
        - value_selector:
          - conversation
          - based_on_business_hours
          variable: based_on_business_hours
      height: 54
      id: '1727252290226'
      position:
        x: 1820.7530155529084
        y: 2245.2171745319943
      positionAbsolute:
        x: 1820.7530155529084
        y: 2245.2171745319943
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        code: "import json\nfrom datetime import datetime, timezone, timedelta\n\n\
          \ndef get_current_time_dict():\n    \"\"\"現在の時刻を辞書型に変換します。\"\"\"\n    current_time\
          \ = datetime.now(timezone(timedelta(hours=+9)))\n\n    # 分を最も近い30分単位に丸める\n\
          \    rounded_minute = 30 if current_time.minute >= 30 else 0\n    current_time_str\
          \ = f\"{current_time.hour:02d}:{rounded_minute:02d}\"\n    ranges = []\n\
          \    ranges.append({\"start\": \"00:00\", \"end\": current_time_str, 'showAs':\
          \ \"busy\", 'isAllDay': False})\n        \n    return ranges\n\ndef time_to_index(time_str):\n\
          \    \"\"\"時間文字列(HH:MM)をインデックス(0-1439)に変換します。\"\"\"\n    hours, minutes\
          \ = map(int, time_str.split(\":\"))  # 時間と分を整数に変換\n    return hours * 60\
          \ + minutes  # 時間を分に変換して分を加算し、インデックスを計算\n\n\ndef index_to_time(index):\n\
          \    \"\"\"インデックス(0-1439)を時間文字列(HH:MM)に変換します。\"\"\"\n    hours = index //\
          \ 60  # インデックスを60で割って時間を計算\n    minutes = index % 60  # インデックスを60で割った余りで分を計算\n\
          \    return f\"{hours:02d}:{minutes:02d}\"  # 時間と分を2桁のゼロ埋めでフォーマット\n\ndef\
          \ mark_schedule(calendar, schedule):\n    \"\"\"指定されたスケジュールに基づいてカレンダーをマークします。\"\
          \"\"\n    for event in schedule:\n            \n        start_idx = time_to_index(event['start'])\
          \  # イベントの開始時刻をインデックスに変換\n        end_idx = time_to_index(event['end'])\
          \  # イベントの終了時刻をインデックスに変換\n        for i in range(start_idx, end_idx):\n\
          \            if event['showAs'] != 'free' and event['showAs'] != 'workingElsewhere':\n\
          \                calendar[i] = 1  # イベントが「free」または「workingElsewhere」でない場合、カレンダーをマーク\n\
          \ndef get_free_time_slots(calendar, conference_time, step=15):\n    \"\"\
          \"カレンダーから空き時間のスロットを計算します。\"\"\"\n    free_slots = []\n\n    for start in\
          \ range(0, len(calendar) - conference_time + 1, step):\n        is_free\
          \ = True\n        for i in range(start, start + conference_time):\n    \
          \        if calendar[i] != 0:\n                is_free = False  # スロット内にマークがある場合は空き時間ではないと判断\n\
          \                break\n        if is_free:\n            free_slots.append((start,\
          \ start + conference_time))  # 空き時間のスロットをリストに追加\n    return free_slots\n\
          \ndef parse_time_ranges(time_ranges):\n    \"\"\"時間範囲の文字列を辞書のリストに解析します。\"\
          \"\"\n    ranges = []\n    for time_range in time_ranges.split(','):\n \
          \       start, end = time_range.split('-')\n        ranges.append({'start':\
          \ start.strip(), 'end': end.strip(), 'showAs': \"busy\", 'isAllDay': False})\
          \  # 開始と終了時間を辞書として追加。strip()で空白文字を削除\n        \n    return ranges\n\n\n\
          def find_common_free_times(data, exclude_times, work_hours, conference_time,\
          \ holidays, start_date, end_date, step):\n    \n    free_slots_flag = True\
          \   # 共通の空き時間が取れたかどうか記録する変数\n    total_free_slots_count = 0  # 共通の空き時間をカウントする変数\n\
          \n    # 開始と終了日時をdatetimeオブジェクトに変換\n    start_date = datetime.fromisoformat(start_date.replace('/',\
          \ '-'))\n    end_date = datetime.fromisoformat(end_date.replace('/', '-'))\n\
          \n    exclude_times_parsed = parse_time_ranges(exclude_times)  # 除外時間を解析し、辞書型にする\n\
          \    work_hours_parsed = {'start': work_hours.split('-')[0], 'end': work_hours.split('-')[1]}\
          \  # 勤務時間を解析、辞書型にする\n    holidays_set = set(holidays)  # 祝日のリストをセットに変換\n\
          \n    users_schedules = data  # ユーザーごとのスケジュールを取得\n    users_schedules[\"\
          common\"] = {}\n\n    \n    all_days = set()\n    # 指定された期間内の日付を取得\n   \
          \ current_date = start_date\n \n    while current_date <= end_date:\n  \
          \      # 土日を除外\n        if current_date.weekday() < 5:  # 0-4は平日\n     \
          \       all_days.add(current_date.strftime(\"%Y-%m-%d\"))\n        current_date\
          \ += timedelta(days=1)\n\n    # 現在の日付を YYYY-MM-DD 形式で取得\n    today_str =\
          \ datetime.now().strftime(\"%Y-%m-%d\")\n    \n    \n    common_free_times\
          \ = {}\n    for day in sorted(all_days):\n        if day in holidays_set:\
          \  # 祝日をスキップ\n            continue\n        \n        day_schedules = {}\n\
          \        for user, schedule in users_schedules.items():\n            day_schedules[user]\
          \ = schedule.get(day, [])  # 各ユーザーのその日スケジュールを取得\n\n        free_times_per_user\
          \ = {}\n        for user, schedule in day_schedules.items():\n         \
          \   calendar = [0] * 1440  # 1日のカレンダー（分単位）\n\n            # スケジュールをカレンダーにマーク\n\
          \            mark_schedule(calendar, schedule)\n\n            # 除外時間をカレンダーにマーク\n\
          \            mark_schedule(calendar, exclude_times_parsed)\n           \
          \ \n            # 現在の日付を YYYY-MM-DD 形式で取得\n            today_str = datetime.now().strftime(\"\
          %Y-%m-%d\")\n\n            # 現在時刻以前をカレンダーにマーク\n            if day ==  today_str:\n\
          \                mark_schedule(calendar, get_current_time_dict())\n\n  \
          \          # 勤務時間をカレンダーにマーク\n            work_start_idx = time_to_index(work_hours_parsed['start'])\n\
          \            work_end_idx = time_to_index(work_hours_parsed['end'])\n  \
          \          for i in range(0, work_start_idx):\n                calendar[i]\
          \ = 1  # 勤務時間前をブロック\n            for i in range(work_end_idx, 1440):\n \
          \               calendar[i] = 1  # 勤務時間後をブロック\n\n            # 空き時間を見つける\n\
          \            free_times_per_user[user] = get_free_time_slots(calendar, conference_time,step)\n\
          \n        # 共通の空きスロットを見つける\n        common_slots = set(free_times_per_user[list(free_times_per_user.keys())[0]])\n\
          \        for slots in free_times_per_user.values():\n            common_slots.intersection_update(slots)\
          \  # 共通の空きスロットを計算\n\n        # 日付ごとに結果をグループ化\n        if day not in common_free_times:\n\
          \            common_free_times[day] = []\n        for start, end in sorted(common_slots):\n\
          \            common_free_times[day].append({\n                \"FreeTime\"\
          : f\"{index_to_time(start)}-{index_to_time(end)}\",  # 空き時間をフォーマット\n   \
          \         })\n            total_free_slots_count += 1  # 共通の空きスロットをカウント\n\
          \n    # 共通の空き時間が0件の場合は False を返す\n    if total_free_slots_count == 0:\n\
          \        free_slots_flag = False\n\n    return common_free_times, free_slots_flag\n\
          \ndef main(working_times, exclusion_times, not_available_times, conference_time,\
          \ holidays, start_date , end_date) -> dict:\n    # 共通の空き時間を見つける\n    common_free_times,\
          \ free_slots_flag = find_common_free_times(json.loads(not_available_times),\
          \ exclusion_times, working_times, conference_time, holidays, start_date\
          \ , end_date, 30)\n\n    # 結果を出力\n    json_output = json.dumps(common_free_times,\
          \ ensure_ascii=False)\n\n    return {\n        \"available_times\": json_output,\
          \  # 空き時間を辞書として返す\n        \"free_slots_flag\": str(free_slots_flag)\n \
          \   }"
        code_language: python3
        desc: ''
        outputs:
          available_times:
            children: null
            type: string
          free_slots_flag:
            children: null
            type: string
        selected: false
        title: 共通空き時間を算出
        type: code
        variables:
        - value_selector:
          - conversation
          - working_times
          variable: working_times
        - value_selector:
          - conversation
          - exclusion_times
          variable: exclusion_times
        - value_selector:
          - '1727252112266'
          - calendar
          variable: not_available_times
        - value_selector:
          - '1724663548765'
          - conferenceTime
          variable: conference_time
        - value_selector:
          - conversation
          - holidays
          variable: holidays
        - value_selector:
          - conversation
          - start_date
          variable: start_date
        - value_selector:
          - conversation
          - end_date
          variable: end_date
      height: 54
      id: '1727252615094'
      position:
        x: 2786.00544662214
        y: 2245.2171745319943
      positionAbsolute:
        x: 2786.00544662214
        y: 2245.2171745319943
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        author: difyadmin
        desc: ''
        height: 88
        selected: false
        showAuthor: true
        text: '{"root":{"children":[{"children":[{"detail":0,"format":1,"mode":"normal","style":"","text":"空き時間算出","type":"text","version":1}],"direction":"ltr","format":"","indent":0,"type":"paragraph","version":1,"textFormat":1}],"direction":"ltr","format":"","indent":0,"type":"root","version":1}}'
        theme: blue
        title: ' (1)'
        type: ''
        width: 240
      height: 88
      id: '17272528815140'
      position:
        x: 1558.014415819086
        y: 2225.569392824832
      positionAbsolute:
        x: 1558.014415819086
        y: 2225.569392824832
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom-note
      width: 240
    - data:
        assigned_variable_selector:
        - conversation
        - based_on_business_hours
        desc: ''
        input_variable_selector:
        - '1727310746680'
        - output
        selected: false
        title: BasedOnBusinessHoursを更新
        type: assigner
        write_mode: over-write
      height: 132
      id: '1727310221154'
      position:
        x: 6835.540633644658
        y: 379.1582430314195
      positionAbsolute:
        x: 6835.540633644658
        y: 379.1582430314195
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        code: "\ndef main() -> dict:\n    return {\n        \"False\": \"False\",\n\
          \    }\n"
        code_language: python3
        desc: ''
        outputs:
          'False':
            children: null
            type: string
        selected: false
        title: '"False"を準備'
        type: code
        variables: []
      height: 54
      id: '1727310246418'
      position:
        x: 6133.350925005505
        y: 328.41704746463733
      positionAbsolute:
        x: 6133.350925005505
        y: 328.41704746463733
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        code: "\ndef main() -> dict:\n    return {\n        \"True\": \"True\",\n\
          \    }\n"
        code_language: python3
        desc: ''
        outputs:
          'True':
            children: null
            type: string
        selected: false
        title: '"True"を準備 '
        type: code
        variables: []
      height: 54
      id: '17273106731170'
      position:
        x: 6133.350925005505
        y: 483.9802457479239
      positionAbsolute:
        x: 6133.350925005505
        y: 483.9802457479239
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        desc: ''
        output_type: string
        selected: false
        title: False/Trueを準備
        type: variable-aggregator
        variables:
        - - '1727310246418'
          - 'False'
        - - '17273106731170'
          - 'True'
      height: 138
      id: '1727310746680'
      position:
        x: 6515.029509934594
        y: 379.1582430314195
      positionAbsolute:
        x: 6515.029509934594
        y: 379.1582430314195
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        assigned_variable_selector:
        - conversation
        - available_times
        desc: ''
        input_variable_selector:
        - '1727252615094'
        - available_times
        selected: false
        title: 共通空き時間を変数にセット
        type: assigner
        write_mode: over-write
      height: 132
      id: '1728519034672'
      position:
        x: 3064.4557310506016
        y: 2245.2171745319943
      positionAbsolute:
        x: 3064.4557310506016
        y: 2245.2171745319943
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        cases:
        - case_id: 'true'
          conditions:
          - comparison_operator: is
            id: 50bf82dc-cfc2-434a-95f2-81a768e9bb77
            value: 含める
            varType: string
            variable_selector:
            - '1724663548765'
            - include_out_of_business_hours
          id: 'true'
          logical_operator: and
        desc: ''
        selected: false
        title: 定時外を調整対象に含めるか？
        type: if-else
      height: 126
      id: '1728530898275'
      position:
        x: 5801.456515305918
        y: 345.57065030468493
      positionAbsolute:
        x: 5801.456515305918
        y: 345.57065030468493
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        code: "def main(step:int) -> dict:\n    return {\n        \"step\": step -\
          \ 1\n    }\n"
        code_language: python3
        desc: ''
        outputs:
          step:
            children: null
            type: number
        selected: false
        title: STEPを戻す(値の準備)
        type: code
        variables:
        - value_selector:
          - conversation
          - step
          variable: step
      height: 54
      id: '1729175190062'
      position:
        x: 1242.571023473466
        y: 620.5003373356479
      positionAbsolute:
        x: 1242.571023473466
        y: 620.5003373356479
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        assigned_variable_selector:
        - conversation
        - step
        desc: ''
        input_variable_selector:
        - '1729175190062'
        - step
        selected: false
        title: STEPを戻す(値の代入)
        type: assigner
        write_mode: over-write
      height: 132
      id: '1729175245853'
      position:
        x: 1242.571023473466
        y: 673.5003373356478
      positionAbsolute:
        x: 1242.571023473466
        y: 673.5003373356478
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        answer: "ありがとうございます！確認いたしますね。\n\n入力いただいた内容から、該当の参加者の候補をリストアップしました。\n\n**数字を指定して、該当の参加者をお選びください！**\n\
          \n\n{{#1729175423598.output_text#}}\n\n--------\n**回答例**\n\n■参加者を指定\n  **1,3,5**\n\
          \n■参加者の入力に戻りたい場合、「戻る」と入力ください。\n**戻る**\n\n\n"
        desc: ''
        selected: false
        title: 【【STEP2 参加者指定】
        type: answer
        variables: []
      height: 218
      id: '1729175270818'
      position:
        x: 1904.905594591443
        y: 1176.6859071372426
      positionAbsolute:
        x: 1904.905594591443
        y: 1176.6859071372426
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        code: "\nimport json\n\ndef main(estimated_participants: list) -> dict:\n\n\
          \    output_text = \"\"\n    keyword = \"\"\n\n    for index, part_dict\
          \ in enumerate(estimated_participants):\n        \n        num = index +\
          \ 1 \n\n        if part_dict[\"keyword\"] != keyword:\n            keyword\
          \ = part_dict[\"keyword\"]\n            output_text += f\"--------\\n「{keyword}」\\\
          n以下から候補を選んでください。\\n\"\n\n        # 出力テキストの準備\n        output_text += f\"\
          \\n{num}. {part_dict['department']} {part_dict['section']}：\\n{part_dict['name']}\
          \ : {part_dict['mail']}\\n\\n\"\n\n\n    return {\n        \"output_text\"\
          : output_text,\n    }"
        code_language: python3
        desc: ''
        outputs:
          output_text:
            children: null
            type: string
        selected: false
        title: 出力テキストの準備
        type: code
        variables:
        - value_selector:
          - conversation
          - estimated_participants
          variable: estimated_participants
      height: 54
      id: '1729175423598'
      position:
        x: 1601.6708561610346
        y: 1176.6859071372426
      positionAbsolute:
        x: 1601.6708561610346
        y: 1176.6859071372426
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        answer: 'こんにちは！スケジュール調整のお手伝いをいたします。まず、今回のミーティングに参加するメンバーを教えてください。


          --------

          **回答例**


          - 池田修一、自動車の飯塚

          - ikeda,iizuka'
        desc: ''
        selected: false
        title: 【STEP1 参加者入力】
        type: answer
        variables: []
      height: 168
      id: '1729175885840'
      position:
        x: 1601.6708561610346
        y: 620.5003373356479
      positionAbsolute:
        x: 1601.6708561610346
        y: 620.5003373356479
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        code: "\ndef main(step:int) -> dict:\n    return {\n        \"step\": step\
          \ + 1\n    }\n"
        code_language: python3
        desc: ''
        outputs:
          step:
            children: null
            type: number
        selected: false
        title: STEPを進める(値の準備)
        type: code
        variables:
        - value_selector:
          - conversation
          - step
          variable: step
      height: 54
      id: '1729175986261'
      position:
        x: 2233.1813405116545
        y: 873.7753195168506
      positionAbsolute:
        x: 2233.1813405116545
        y: 873.7753195168506
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        assigned_variable_selector:
        - conversation
        - step
        desc: ''
        input_variable_selector:
        - '1729175986261'
        - step
        selected: false
        title: STEPを進める(値の代入)
        type: assigner
        write_mode: over-write
      height: 132
      id: '1729176044844'
      position:
        x: 2233.1813405116545
        y: 934.0318277418654
      positionAbsolute:
        x: 2233.1813405116545
        y: 934.0318277418654
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        classes:
        - id: '1'
          name: 戻る、と指定している。
        - id: '2'
          name: '同意している。

            例：ハイ、はい、hai、yes'
        desc: ''
        instructions: ''
        model:
          completion_params:
            temperature: 0
          mode: chat
          name: gpt4o-CTC-ScheduleOpenAI
          provider: azure_openai
        query_variable_selector:
        - '1724663548765'
        - sys.query
        selected: false
        title: 提示された参加者に同意しているか？
        topics: []
        type: question-classifier
      height: 184
      id: '1729176093466'
      position:
        x: 886.5913758357708
        y: 1218.0390479171358
      positionAbsolute:
        x: 886.5913758357708
        y: 1218.0390479171358
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        code: "def main(step:int) -> dict:\n    return {\n        \"step\": step -\
          \ 1\n    }\n\n"
        code_language: python3
        desc: ''
        outputs:
          step:
            children: null
            type: number
        selected: false
        title: STEPを戻す(値の準備)
        type: code
        variables:
        - value_selector:
          - conversation
          - step
          variable: step
      height: 54
      id: '1729176193190'
      position:
        x: 1242.571023473466
        y: 1176.6859071372426
      positionAbsolute:
        x: 1242.571023473466
        y: 1176.6859071372426
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        assigned_variable_selector:
        - conversation
        - step
        desc: ''
        input_variable_selector:
        - '1729176193190'
        - step
        selected: false
        title: STEPを戻す(値の代入)
        type: assigner
        write_mode: over-write
      height: 132
      id: '1729176240096'
      position:
        x: 1242.571023473466
        y: 1238.7156183070824
      positionAbsolute:
        x: 1242.571023473466
        y: 1238.7156183070824
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        classes:
        - id: '1'
          name: 参加者を指定しなおしている
        - id: '2'
          name: 日程や時間を指定しなおしている
        - id: '1729402844349'
          name: 優先度が低そうな予定を提示することを希望している
        - id: '1729483823544'
          name: 'ユーザーが何を望んでいるのか、まだはっきりしない。またその他の入力。

            例：

            調整を続ける、

            何ができますか？

            '
        desc: ''
        instruction: ''
        instructions: ''
        memory:
          query_prompt_template: ''
          window:
            enabled: false
            size: 50
        model:
          completion_params:
            temperature: 0
          mode: chat
          name: gpt4o-CTC-ScheduleOpenAI
          provider: azure_openai
        query_variable_selector:
        - '1724663548765'
        - sys.query
        selected: false
        title: 要望の分類
        topics: []
        type: question-classifier
      height: 312
      id: '1729402806019'
      position:
        x: 1066.3238690054984
        y: 2867.6275593208097
      positionAbsolute:
        x: 1066.3238690054984
        y: 2867.6275593208097
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        answer: 'ご希望に添えず申し訳ありません。


          参加者の再指定は現在できません。

          もし変更が必要な場合は、**画面右上のリフレッシュボタン**をクリックして、最初からやり直してください。'
        desc: ''
        selected: false
        title: 参加者の再指定
        type: answer
        variables: []
      height: 168
      id: '1729403028681'
      position:
        x: 1507.745550816607
        y: 2719.007317836435
      positionAbsolute:
        x: 1507.745550816607
        y: 2719.007317836435
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        context:
          enabled: true
          variable_selector:
          - conversation
          - available_times
        desc: 抽出された共通空き時間から、ユーザのニーズに合った空き時間を抽出する。
        model:
          completion_params:
            temperature: 0
          mode: chat
          name: gpt4o-CTC-ScheduleOpenAI
          provider: azure_openai
        prompt_template:
        - id: 6ce51b9d-0849-4c8a-801e-1eda99f432e6
          role: system
          text: "# 命令\n取得した共通の空き時間の中から最大3つ選び、提示してください。焦って答えは出さず、時間をかけて慎重に回答してください。\n\
            \n\n# 共通の空き時間\n{{#context#}}\n\n# 手順\n1. 「共通の空き時間」を確認してください。\n　1-1 空き時間（xx:xx-xx:xx）が存在する場合\n\
            　　次の手順2に進んでください。\n　1-2 空き時間（xx:xx-xx:xx）が存在しない場合\n　　「出力例1」を出力してください。\n\
            2. ユーザから「「その他要望」を受け取ったか？\n　2-1 受け取った場合\n　　「共通の空き時間」を参照し、ユーザの希望にあった日時を最大３つ選択してください。希望に沿った日時が1つもない場合、　「出力例1」を出力してください。\n\
            　2-2 受け取ってない場合\n　　「共通の空き時間」を参照し、一番早い日付から３つ選択してください。\n3. 「出力形式」と「出力例2」に沿って、選択した3つの空き時間を出力してください。\
            \ \n\n\n# その他要望\n{{#1724663548765.other_request#}}\n{{#sys.query#}}\n\n\
            # 出力形式\n以下は参加者の共通の空き時間です。リンクをクリックして、会議を設定してください。\n\n[日程](リンク)\n\n[日程](リンク)\n\
            \n[日程](リンク)\n\n\n# 出力例1\n適した空き時間は見つかりませんでした。\n\n**なお、参加者のカレンダーで、優先度が低そうな予定を探し、提示することもできます。**\n\
            \n# 出力例2\n以下は参加者の共通の空き時間です。リンクをクリックして、会議を設定してください。\n\n[2024年6月6日 16:00-16:30](https://outlook.office.com/calendar/deeplink/compose?path=/calendar/action/compose&startdt=2024-06-06T16:00:00&enddt=2024-06-06T16:30:00&subject='会議名を設定してください'&body='本文を記載してください。'&to={{#conversation.address#}})\n\
            \n[2024年6月6日 16:15-16:45](https://outlook.office.com/calendar/deeplink/compose?path=/calendar/action/compose&startdt=2024-06-06T16:15:00&enddt=2024-06-06T16:45:00&subject='会議名を設定してください'&body='本文を記載してください。'&to={{#conversation.address#}})\n\
            \n[2024年6月6日 16:30-17:00](https://outlook.office.com/calendar/deeplink/compose?path=/calendar/action/compose&startdt=2024-06-06T16:30:00&enddt=2024-06-06T17:00:00&subject='会議名を設定してください'&body='本文を記載してください。'&to={{#conversation.address#}})\n"
        selected: false
        title: 'ニーズに合った空き時間を再抽出  '
        type: llm
        variables: []
        vision:
          configs:
            detail: high
          enabled: true
      height: 142
      id: '17294031324280'
      position:
        x: 1798.9418995633218
        y: 3125.2106306936375
      positionAbsolute:
        x: 1798.9418995633218
        y: 3125.2106306936375
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        code: "import json\nfrom datetime import datetime, timezone, timedelta\n\n\
          # 現在の時刻を辞書型に変換\ndef get_current_time_dict():\n\n    current_time = datetime.now(timezone(timedelta(hours=+9)))\n\
          \n    # 分を最も近い30分単位に丸める\n    rounded_minute = 30 if current_time.minute\
          \ >= 30 else 0\n    # 時間と分を「HH:MM」形式の文字列にフォーマット\n    current_time_str =\
          \ f\"{current_time.hour:02d}:{rounded_minute:02d}\"\n    # 辞書型の時間範囲をリストに追加\n\
          \    ranges = []\n    ranges.append({\"start\": \"00:00\", \"end\": current_time_str,\
          \ 'showAs': \"busy\", 'isAllDay': False})\n        \n    return ranges\n\
          \n# 時間文字列(HH:MM)をインデックス(0-1439)に変換\ndef time_to_index(time_str):\n    #\
          \ 時間と分を分離して整数に変換\n    hours, minutes = map(int, time_str.split(\":\"))\n\
          \    # 時間を分に変換して合計を返す\n    return hours * 60 + minutes\n\n# インデックス(0-1439)を時間文字列(HH:MM)に変換\n\
          def index_to_time(index):\n    # インデックスを60で割って時間を計算\n    hours = index //\
          \ 60\n    # インデックスを60で割った余りで分を計算\n    minutes = index % 60\n    # フォーマットした文字列を返す\n\
          \    return f\"{hours:02d}:{minutes:02d}\"\n\n# 指定されたスケジュールに基づいてカレンダーをマーク\n\
          def mark_schedule(day, calendar, schedule, user):\n\n    for event in schedule:\n\
          \        # イベントの開始・終了時刻をインデックスに変換\n        start_idx = time_to_index(event['start'])\n\
          \        end_idx = time_to_index(event['end'])\n        for i in range(start_idx,\
          \ end_idx):\n            # イベントが「free」または「workingElsewhere」でない場合、カレンダーをマーク\n\
          \            if event['showAs'] != 'free' and event['showAs'] != 'workingElsewhere':\n\
          \                calendar[i][\"num\"] += 1\n                calendar[i][\"\
          user\"] = user\n                calendar[i][\"day\"] = day\n           \
          \     calendar[i][\"event\"] = event\n\n# 指定された除外時間に基づいてカレンダーをマーク\ndef mark_exclude(calendar,\
          \ schedule):\n    for event in schedule:\n        # 除外時間の開始・終了インデックスを取得\n\
          \        start_idx = time_to_index(event['start'])\n        end_idx = time_to_index(event['end'])\n\
          \        \n        for i in range(start_idx, end_idx):\n            calendar[i][\"\
          num\"] += 0\n\n# 時間範囲の文字列を辞書のリストに解析\ndef parse_time_ranges(time_ranges):\n\
          \    ranges = []\n    # カンマで区切られた範囲を処理\n    for time_range in time_ranges.split(','):\n\
          \        start, end = time_range.split('-')\n        # 開始と終了時間を辞書として追加。strip()で空白文字を削除\n\
          \        ranges.append({'start': start.strip(), 'end': end.strip(), 'showAs':\
          \ \"busy\", 'isAllDay': False})\n        \n    return ranges\n\n# 指定期間内で調整可能な時間を見つける\n\
          def find_adjustment_times(data, exclusion_times, work_hours, conference_time,\
          \ holidays, start_date, end_date):\n    \n\n    # 開始と終了日時をdatetimeオブジェクトに変換\n\
          \    start_date = datetime.fromisoformat(start_date.replace('/', '-'))\n\
          \    end_date = datetime.fromisoformat(end_date.replace('/', '-'))\n\n \
          \   # 除外時間を解析し、辞書型にする\n    exclude_times_parsed = parse_time_ranges(exclusion_times)\n\
          \    # 勤務時間を解析、辞書型にする\n    work_hours_parsed = {'start': work_hours.split('-')[0],\
          \ 'end': work_hours.split('-')[1]}\n    # 祝日のリストをセットに変換\n    holidays_set\
          \ = set(holidays)\n\n    # すべてのユーザーのスケジュールを取得\n    users_schedules = data\n\
          \    users_schedules[\"common\"] = {}\n\n    \n    all_days = set()\n  \
          \  # 指定された期間内の日付を取得\n    current_date = start_date\n    \n    # 開始から終了日までの日付を取得（平日）\n\
          \    while current_date <= end_date:\n        # 土日を除外\n        if current_date.weekday()\
          \ < 5:  # 0-4は平日\n            all_days.add(current_date.strftime(\"%Y-%m-%d\"\
          ))\n        current_date += timedelta(days=1)\n\n    # 現在の日付を YYYY-MM-DD\
          \ 形式で取得\n    today_str = datetime.now().strftime(\"%Y-%m-%d\")\n    \n \
          \   # 調整可能な時間のリスト\n    adjustment_times = []\n    \n    # 各日付ごとにカレンダーを作成\n\
          \    for day in sorted(all_days):\n        # 祝日をスキップ\n        if day in\
          \ holidays_set:\n            continue\n        \n        #空のカレンダー\n    \
          \    calendar = [{\"num\": 0, \"user\": \"\", \"day\": \"\", \"event\":\
          \ \"\"} for _ in range(1440)]\n        \n        day_schedules = {}\n  \
          \      for user, schedule in users_schedules.items():\n            # 各ユーザーのその日スケジュールを取得\n\
          \            day_schedules[user] = schedule.get(day, [])\n\n        for\
          \ user, schedule in day_schedules.items():\n\n            # スケジュールをカレンダーにマーク\n\
          \            mark_schedule(day, calendar, schedule, user)\n\n          \
          \  # 除外時間をカレンダーにマーク\n            mark_exclude(calendar, exclude_times_parsed)\n\
          \            \n            # 現在の日付を YYYY-MM-DD 形式で取得\n            today_str\
          \ = datetime.now().strftime(\"%Y-%m-%d\")\n\n            # 現在時刻以前をカレンダーにマーク\n\
          \            if day ==  today_str:\n                mark_exclude(calendar,\
          \ get_current_time_dict())\n\n            # 勤務時間をカレンダーにマーク\n           \
          \ work_start_idx = time_to_index(work_hours_parsed['start'])\n         \
          \   work_end_idx = time_to_index(work_hours_parsed['end'])\n           \
          \ for i in range(0, work_start_idx):\n                calendar[i][\"num\"\
          ] = 0  # 勤務時間前をブロック\n            for i in range(work_end_idx, 1440):\n \
          \               calendar[i][\"num\"] = 0  # 勤務時間後をブロック\n               \
          \ \n        # 調整対象の予定を探す（その時間帯にその予定か一つしかない、および、一つしかない時間がconferenceTimeに達する場合に、調整対象）\n\
          \        event = \"\"\n        count = 0\n\n        for slot in calendar:\n\
          \            if slot[\"num\"] == 1: #[\"num\"]=1ということはその時間は予定が一つしかないということ\n\
          \                \n                # 対象の予定が切り替わった\n                if slot[\"\
          event\"] != event:\n                    count = 0\n                    event\
          \ = slot[\"event\"]\n                \n                count += 1\n    \
          \            \n                # 対象の予定が一つしかない時間がconferenceTimeに達したら、かつ非表示の予定でない場合、調整対象の予定に追加\n\
          \                if count == (conference_time-1) and slot[\"event\"][\"\
          subject\"] != \"private\": \n                    adjustment_times.append(slot)\n\
          \        \n\n    # 調整対象の予定が0件の場合は False を返す\n    adjustment_times_flag =\
          \ bool(adjustment_times)\n\n    return adjustment_times, adjustment_times_flag\n\
          \ndef main(working_times, exclusion_times, not_available_times, conference_time,\
          \ holidays, start_date , end_date) -> dict:\n    # 調整対象の予定を見つける\n    adjustment_times,\
          \ adjustment_times_flag = find_adjustment_times(json.loads(not_available_times),\
          \ exclusion_times, working_times, conference_time, holidays, start_date\
          \ , end_date)\n\n\n    return {\n        \"adjustment_times\": adjustment_times,\
          \  # 調整対象予定を辞書として返す\n        \"adjustment_times_flag\": str(adjustment_times_flag)\
          \ # 調整対象予定が見つかったかどうかを返す\n    }"
        code_language: python3
        desc: ''
        outputs:
          adjustment_times:
            children: null
            type: array[object]
          adjustment_times_flag:
            children: null
            type: string
        selected: false
        title: 調整対象の予定を抽出
        type: code
        variables:
        - value_selector:
          - conversation
          - working_times
          variable: working_times
        - value_selector:
          - conversation
          - exclusion_times
          variable: exclusion_times
        - value_selector:
          - '1729697280782'
          - calendar
          variable: not_available_times
        - value_selector:
          - '1724663548765'
          - conferenceTime
          variable: conference_time
        - value_selector:
          - conversation
          - holidays
          variable: holidays
        - value_selector:
          - conversation
          - start_date
          variable: start_date
        - value_selector:
          - conversation
          - end_date
          variable: end_date
      height: 54
      id: '1729403585014'
      position:
        x: 2743.779160660655
        y: 3356.2103714159043
      positionAbsolute:
        x: 2743.779160660655
        y: 3356.2103714159043
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        assigned_variable_selector:
        - conversation
        - working_times
        desc: ''
        input_variable_selector:
        - '1727252290226'
        - working_times
        selected: false
        title: working_timeの更新
        type: assigner
        write_mode: over-write
      height: 132
      id: '1729404163513'
      position:
        x: 2176.125641189932
        y: 2245.2171745319943
      positionAbsolute:
        x: 2176.125641189932
        y: 2245.2171745319943
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        assigned_variable_selector:
        - conversation
        - exclusion_times
        desc: ''
        input_variable_selector:
        - '1727252290226'
        - exclusion_times
        selected: false
        title: exclusion_timesの更新
        type: assigner
        write_mode: over-write
      height: 132
      id: '1729404201236'
      position:
        x: 2427.125641189932
        y: 2245.2171745319943
      positionAbsolute:
        x: 2427.125641189932
        y: 2245.2171745319943
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        assigned_variable_selector:
        - conversation
        - holidays
        desc: ''
        input_variable_selector:
        - '1727252290226'
        - holidays
        selected: false
        title: holidaysの更新
        type: assigner
        write_mode: over-write
      height: 132
      id: '1729404338268'
      position:
        x: 2176.125641189932
        y: 2383.2171745319943
      positionAbsolute:
        x: 2176.125641189932
        y: 2383.2171745319943
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        assigned_variable_selector:
        - conversation
        - start_date
        desc: ''
        input_variable_selector:
        - '1727251498456'
        - start_date
        selected: false
        title: start_dateの更新
        type: assigner
        write_mode: over-write
      height: 132
      id: '1729404378589'
      position:
        x: 2427.125641189932
        y: 2383.2171745319943
      positionAbsolute:
        x: 2427.125641189932
        y: 2383.2171745319943
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        assigned_variable_selector:
        - conversation
        - end_date
        desc: ''
        input_variable_selector:
        - '1727251498456'
        - end_date
        selected: false
        title: end_dateの更新
        type: assigner
        write_mode: over-write
      height: 132
      id: '1729404428309'
      position:
        x: 2176.125641189932
        y: 2518.184502506208
      positionAbsolute:
        x: 2176.125641189932
        y: 2518.184502506208
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        answer: '以下のようなことをご依頼いただければ調整いたします。


          --------

          **回答例**


          - 午後で調整したい

          - 10/23で探してほしい

          - 参加者のカレンダーで、優先度が低そうな予定を提示してほしい'
        desc: ''
        selected: false
        title: ユーザが何をしたいかを聞く
        type: answer
        variables: []
      height: 168
      id: '1729484406610'
      position:
        x: 1491.6368915805353
        y: 3550.649798243825
      positionAbsolute:
        x: 1491.6368915805353
        y: 3550.649798243825
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        answer: '了解しました！では、皆さんの空いている時間を確認しますね。

          少々お待ちください…


          {{#17294031324280.text#}}


          他にご希望や調整事項はございますか？


          --------

          **回答例**

          - 午後で調整したい

          - 10/23で探してほしい

          - 参加者のカレンダーで、優先度が低そうな予定を提示してほしい'
        desc: ''
        selected: false
        title: 共通空き時間を再提示
        type: answer
        variables: []
      height: 202
      id: '1729484518506'
      position:
        x: 2099.311058534033
        y: 3125.2106306936375
      positionAbsolute:
        x: 2099.311058534033
        y: 3125.2106306936375
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        answer: '調整できそうな予定は下記になります。

          こちらの予定がなくなると、ご希望の条件で予定が登録できます。

          該当者に掛け合ってみてください。




          {{#1731897570544.output_text#}}





          --------



          他にご希望や調整事項はございますか？


          --------

          **回答例**

          - 午後で調整したい

          - 10/23で探してほしい

          - 参加者のカレンダーで、優先度が低そうな予定を提示してほしい'
        desc: ''
        selected: false
        title: 調整可能性の高い予定の提示
        type: answer
        variables: []
      height: 250
      id: '1729485334320'
      position:
        x: 6014.300202654581
        y: 3356.2103714159043
      positionAbsolute:
        x: 6014.300202654581
        y: 3356.2103714159043
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        classes:
        - id: '1'
          name: 調整期間を超えている
        - id: '2'
          name: 調整期間を超えていない、もしくは時間帯を指定している。
        desc: ''
        instruction: '# 命令

          ユーザの希望した日時が「調整範囲」の範囲を超えているかどうか、で分類して

          - 超えている場合：クラス１

          - 超えていない場合：クラス２


          # 調整範囲

          {{#conversation.start_date#}} ~ {{#conversation.end_date#}}'
        instructions: ''
        model:
          completion_params:
            temperature: 0
          mode: chat
          name: ctcgpt4o
          provider: azure_openai
        query_variable_selector:
        - '1724663548765'
        - sys.query
        selected: false
        title: 調整期間を超えているか？
        topics: []
        type: question-classifier
      height: 200
      id: '1729660439862'
      position:
        x: 1497.6997578465769
        y: 2945.142897873501
      positionAbsolute:
        x: 1497.6997578465769
        y: 2945.142897873501
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        answer: 'ご希望に添えず申し訳ありません。


          冒頭に指定いただいた調整期間を超える日程は、受け付けられません。

          もし調整期間を変更されたい場合は、**画面右上のリフレッシュボタン**をクリックして、もう一度最初からやり直してください。


          '
        desc: ''
        selected: false
        title: 調整期間を超えた調整
        type: answer
        variables: []
      height: 184
      id: '1729660641962'
      position:
        x: 1798.9418995633218
        y: 2894.5671305667424
      positionAbsolute:
        x: 1798.9418995633218
        y: 2894.5671305667424
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        assigned_variable_selector:
        - conversation
        - payload
        desc: ''
        input_variable_selector:
        - '1727251901797'
        - result
        selected: false
        title: payloadを更新
        type: assigner
        write_mode: over-write
      height: 132
      id: '1729696467433'
      position:
        x: 2433.7231807437965
        y: 2518.184502506208
      positionAbsolute:
        x: 2433.7231807437965
        y: 2518.184502506208
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        authorization:
          config: null
          type: no-auth
        body:
          data: '{{#conversation.payload#}}'
          type: json
        desc: ''
        headers: 'Authorization:Bearer {{#1729697165815.access_token#}}

          Content-Type:application/json'
        method: post
        params: ''
        selected: false
        timeout:
          max_connect_timeout: 0
          max_read_timeout: 0
          max_write_timeout: 0
        title: メールアドレスからカレンダー情報を取得（バッチ）
        type: http-request
        url: https://graph.microsoft.com/v1.0/$batch
        variables: []
      height: 106
      id: '1729696613581'
      position:
        x: 2104.5890901771245
        y: 3356.2103714159043
      positionAbsolute:
        x: 2104.5890901771245
        y: 3356.2103714159043
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        authorization:
          config: null
          type: no-auth
        body:
          data: 'grant_type:client_credentials

            client_id:{{#env.client_id#}}

            scope:https://graph.microsoft.com/.default

            client_secret:{{#env.client_secret#}}'
          type: form-data
        desc: ''
        headers: Content-Type:application/x-www-form-urlencoded
        method: post
        params: ''
        selected: false
        timeout:
          max_connect_timeout: 0
          max_read_timeout: 0
          max_write_timeout: 0
        title: アクセストークンを取得
        type: http-request
        url: https://login.microsoftonline.com/{{#env.tenant_id#}}/oauth2/v2.0/token
        variables: []
      height: 124
      id: '1729696985461'
      position:
        x: 1507.745550816607
        y: 3356.2103714159043
      positionAbsolute:
        x: 1507.745550816607
        y: 3356.2103714159043
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        code: "\ndef main(response: int) -> dict:\n    # JSONテキストをパースして辞書に変換\n   \
          \ token_data = json.loads(response)\n\n    # アクセストークンを取り出す\n    access_token\
          \ = token_data.get('access_token')\n\n    return {\n        \"access_token\"\
          : access_token\n    }"
        code_language: python3
        desc: ''
        outputs:
          access_token:
            children: null
            type: string
        selected: false
        title: アクセストークンを変数にセット
        type: code
        variables:
        - value_selector:
          - '1729696985461'
          - body
          variable: response
      height: 54
      id: '1729697165815'
      position:
        x: 1805.6168053112146
        y: 3356.2103714159043
      positionAbsolute:
        x: 1805.6168053112146
        y: 3356.2103714159043
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        code: "from datetime import datetime, timedelta\nfrom collections import defaultdict\n\
          import re\n\n# メールアドレスをデコードする\ndef decode_email(encoded_email):\n    decoding_map\
          \ = {\n        '%40': '@','%2E': '.','%2D': '-','%5F': '_','%2B': '+','%25':\
          \ '%','%20': ' '\n    }\n    \n    decoded_email = encoded_email\n    for\
          \ encoded_char, decoded_char in decoding_map.items():\n        decoded_email\
          \ = decoded_email.replace(encoded_char, decoded_char)\n    \n    return\
          \ decoded_email\n\n# 任意参加かどうか判定する\ndef check_optional(attendees, target_email)\
          \ -> bool:\n    if not attendees:\n        return False\n    \n    for attendee\
          \ in attendees:\n        if attendee.get('type') == 'optional' and attendee['emailAddress']['address']\
          \ == target_email:\n            return True\n    \n    return False\n\n\n\
          def main(response) -> dict:\n\n    # 必要なデータを抽出して整理\n    extracted_events\
          \ = {}\n    result = defaultdict(lambda: defaultdict(list))\n\n    # レスポンスを解析\n\
          \    responses = json.loads(response)['responses']\n    for response in\
          \ responses:\n        events = response['body']['value']\n        for event\
          \ in events:\n            # email = event['organizer']['emailAddress']['address']\n\
          \n            # 正規表現を使ってメールアドレスを抽出\n            email_pattern = r\"users\\\
          ('([^']+)'\\)\"\n            match = re.search(email_pattern, response['body']['@odata.context'])\n\
          \            # メールアドレスをデコード\n            email = decode_email(match.group(1))\n\
          \n            if event['sensitivity'] == 'private':\n                subject\
          \ = 'private'\n            else:\n                subject = event['subject']\n\
          \            start_time = event['start']['dateTime']\n            end_time\
          \ = event['end']['dateTime']\n           \n            # ISOフォーマットの日時を正規化\n\
          \            start_time = re.sub(r'\\.\\d+', '', start_time) + \"Z\"\n \
          \           end_time = re.sub(r'\\.\\d+', '', end_time) + \"Z\"\n      \
          \      \n            # datetimeオブジェクトに変換\n            start_dt = datetime.fromisoformat(start_time.replace(\"\
          Z\", \"+00:00\"))\n            end_dt = datetime.fromisoformat(end_time.replace(\"\
          Z\", \"+00:00\"))\n            \n            # 9時間加算\n            start_dt\
          \ += timedelta(hours=9)\n            end_dt += timedelta(hours=9)\n    \
          \        \n            # 日付だけを抽出\n            start_date = start_dt.date().isoformat()\n\
          \            end_date = end_dt.date().isoformat()\n            \n      \
          \      # 時間と分だけを抽出\n            start_hour = start_dt.strftime('%H:%M')\n\
          \            end_hour = end_dt.strftime('%H:%M')\n\n            # 終日の予定だった場合に、開始・終了時刻を設定\n\
          \            if event['isAllDay']:\n                start_hour = \"00:00\"\
          \n                end_hour = \"23:59\"\n\n            attendees = event['attendees']\n\
          \            is_optional = check_optional(attendees, email)\n\n        \
          \    result[email][start_date].append({\n                \"subject\": subject,\n\
          \                \"start\": start_hour,\n                \"end\": end_hour,\n\
          \                \"isOptional\": is_optional,\n                \"showAs\"\
          :event['showAs'],\n                \"isAllDay\":event['isAllDay'],\n   \
          \             \"type\":event['type'],\n                \"location\":event['location']['displayName'],\n\
          \                \"attendees_count\": len(attendees)\n            })\n\n\
          \    # 結果をJSON形式で表示\n    events = json.dumps(result,ensure_ascii=False)\n\
          \n    return {\n        \"calendar\": events,\n    }"
        code_language: python3
        desc: ''
        outputs:
          calendar:
            children: null
            type: string
        selected: false
        title: イベント加工
        type: code
        variables:
        - value_selector:
          - '1729696613581'
          - body
          variable: response
      height: 54
      id: '1729697280782'
      position:
        x: 2433.7231807437965
        y: 3356.2103714159043
      positionAbsolute:
        x: 2433.7231807437965
        y: 3356.2103714159043
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        desc: ''
        height: 392
        iterator_selector:
        - '1729403585014'
        - adjustment_times
        output_selector:
        - '1732022414666'
        - output
        output_type: array[string]
        selected: false
        startNodeType: code
        start_node_id: '1731898572900'
        title: 予定タイトルから優先度を判断
        type: iteration
        width: 1896.1563749550833
      height: 392
      id: '1731895655350'
      position:
        x: 3431.151212655692
        y: 3004.564127985492
      positionAbsolute:
        x: 3431.151212655692
        y: 3004.564127985492
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 1896
      zIndex: 1
    - data:
        dataset_ids:
        - 291f3870-49c6-45fd-82b2-6c67ea95e45d
        desc: ''
        isInIteration: true
        isIterationStart: false
        iteration_id: '1731895655350'
        multiple_retrieval_config:
          reranking_enable: true
          reranking_mode: weighted_score
          reranking_model:
            model: ''
            provider: ''
          score_threshold: 0.4
          top_k: 4
          weights:
            keyword_setting:
              keyword_weight: 0
            vector_setting:
              embedding_model_name: 3large-CTC-ScheduleOpenAI
              embedding_provider_name: azure_openai
              vector_weight: 1
        query_variable_selector:
        - '1731898572900'
        - item_subject
        retrieval_mode: multiple
        selected: false
        single_retrieval_config:
          model:
            completion_params: {}
            mode: chat
            name: gpt4o-CTC-ScheduleOpenAI
            provider: azure_openai
        title: 優先度の低い予定タイトルリストとの類似度検索
        type: knowledge-retrieval
      extent: parent
      height: 92
      id: '1731895695949'
      parentId: '1731895655350'
      position:
        x: 746.8661572299225
        y: 85
      positionAbsolute:
        x: 4178.017369885614
        y: 3089.564127985492
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
      zIndex: 1001
    - data:
        cases:
        - case_id: 'true'
          conditions:
          - comparison_operator: empty
            id: c6dfbad7-467d-48bf-8ba1-4c505e8c6720
            value: ''
            varType: array[object]
            variable_selector:
            - '1731895695949'
            - result
          id: 'true'
          logical_operator: and
        desc: ''
        isInIteration: true
        iteration_id: '1731895655350'
        selected: false
        title: 検索結果は空か？
        type: if-else
      extent: parent
      height: 126
      id: '1731896601287'
      parentId: '1731895655350'
      position:
        x: 1040.9397388655775
        y: 85
      positionAbsolute:
        x: 4472.09095152127
        y: 3089.564127985492
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
      zIndex: 1002
    - data:
        code: "def main(item: dict) -> dict:\n    \n    output_list = [f\"\"\"\n \
          \           ******\n            **メールアドレス**: {item[\"user\"]}\n        \
          \    **日時**: {item[\"day\"]}／{item[\"event\"][\"start\"]}〜 {item[\"event\"\
          ][\"end\"]}\n            **予定タイトル**: {item[\"event\"][\"subject\"]}\n  \
          \          **優先度判断の理由**: 予定タイトルの内容から、優先度が低い可能性がある。 \n            \"\"\"\
          ]\n\n\n    return {\n        \"output_list\": output_list,\n\n    }\n"
        code_language: python3
        desc: ''
        isInIteration: true
        iteration_id: '1731895655350'
        outputs:
          output_list:
            children: null
            type: array[string]
        selected: false
        title: 出力テキストの準備
        type: code
        variables:
        - value_selector:
          - '1731895655350'
          - item
          variable: item
      extent: parent
      height: 54
      id: '1731896624716'
      parentId: '1731895655350'
      position:
        x: 1332.1563749550833
        y: 108.17990051525476
      positionAbsolute:
        x: 4763.307587610775
        y: 3112.744028500747
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
      zIndex: 1002
    - data:
        code: "\ndef main(output_list: list) -> dict:\n    output_text = \"\"\n\n\
          \    for item in output_list:\n        output_text += item.replace(\" \"\
          , \"\")\n    return {\n        \"output_text\": output_text,\n    }\n"
        code_language: python3
        desc: ''
        outputs:
          output_text:
            children: null
            type: string
        selected: false
        title: リストをテキストに変換
        type: code
        variables:
        - value_selector:
          - '1731895655350'
          - output
          variable: output_list
      height: 54
      id: '1731897570544'
      position:
        x: 5735.616719186557
        y: 3356.2103714159043
      positionAbsolute:
        x: 5735.616719186557
        y: 3356.2103714159043
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        code: "\ndef main(item: dict) -> dict:\n\n    output_list = []\n    item_subject\
          \ = \"\"\n\n    if item[\"event\"][\"isOptional\"] == True:\n        output_list.append(f\"\
          \"\"\n        ******\n        **メールアドレス**: {item[\"user\"]}\n        **日時**:\
          \ {item[\"day\"]}／{item[\"event\"][\"start\"]}〜 {item[\"event\"][\"end\"\
          ]}\n        **予定タイトル**: {item[\"event\"][\"subject\"]}\n        **優先度判断の理由**:\
          \ 任意参加の予定のため、優先度が低い可能性がある。 \n        \"\"\")\n    elif item[\"event\"][\"\
          attendees_count\"] <= 1:\n        output_list.append(f\"\"\"\n        ******\n\
          \        **メールアドレス**: {item[\"user\"]}\n        **日時**: {item[\"day\"]}／{item[\"\
          event\"][\"start\"]}〜 {item[\"event\"][\"end\"]}\n        **予定タイトル**: {item[\"\
          event\"][\"subject\"]}\n        **優先度判断の理由**: 参加者が一人のみの予定のため、優先度が低い可能性がある。\
          \ \n        \"\"\")\n    else:\n        # 現在のイテレーションの予定タイトルを入手\n       \
          \ item_subject = item[\"event\"][\"subject\"]\n\n\n    return {\n      \
          \  \"output_list\": output_list,\n        \"item_subject\": item_subject\n\
          \    }\n"
        code_language: python3
        dependencies:
        - name: ''
          version: ''
        desc: ''
        isInIteration: true
        isIterationStart: true
        iteration_id: '1731895655350'
        outputs:
          item_subject:
            children: null
            type: string
          output_list:
            children: null
            type: array[string]
        selected: false
        title: 任意/ひとりの予定を抽出
        type: code
        variables:
        - value_selector:
          - '1731895655350'
          - item
          variable: item
      extent: parent
      height: 54
      id: '1731898572900'
      parentId: '1731895655350'
      position:
        x: 117
        y: 85
      positionAbsolute:
        x: 3548.151212655692
        y: 3089.564127985492
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
      zIndex: 1002
    - data:
        cases:
        - case_id: 'true'
          conditions:
          - comparison_operator: empty
            id: 022cf557-15eb-490a-9c38-3b59b09f26d7
            value: ''
            varType: array[string]
            variable_selector:
            - '1731898572900'
            - output_list
          id: 'true'
          logical_operator: and
        desc: ''
        isInIteration: true
        iteration_id: '1731895655350'
        selected: false
        title: 任意/一人の予定ではなかったか
        type: if-else
      extent: parent
      height: 126
      id: '1731898754758'
      parentId: '1731895655350'
      position:
        x: 413.77168302621885
        y: 85
      positionAbsolute:
        x: 3844.9228956819106
        y: 3089.564127985492
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
      zIndex: 1002
    - data:
        desc: ''
        isInIteration: true
        iteration_id: '1731895655350'
        output_type: array[string]
        selected: false
        title: 出力テキストの集約
        type: variable-aggregator
        variables:
        - - '1731896624716'
          - output_list
        - - '1731898572900'
          - output_list
      extent: parent
      height: 138
      id: '1732022414666'
      parentId: '1731895655350'
      position:
        x: 1578.700037777538
        y: 209.16376585760463
      positionAbsolute:
        x: 5009.85125043323
        y: 3213.727893843097
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
      zIndex: 1002
    - data:
        dataset_ids:
        - c38e6777-d090-4532-81ab-fd4a15e60b20
        desc: ''
        multiple_retrieval_config:
          reranking_enable: true
          reranking_mode: weighted_score
          top_k: 4
          weights:
            keyword_setting:
              keyword_weight: 1
            vector_setting:
              embedding_model_name: 3large-CTC-ScheduleOpenAI
              embedding_provider_name: azure_openai
              vector_weight: 0
        query_variable_selector:
        - '1724663548765'
        - user_address
        retrieval_mode: multiple
        selected: false
        title: ユーザの検索
        type: knowledge-retrieval
      height: 92
      id: '1732142701121'
      position:
        x: 881.422233238284
        y: 328.41704746463733
      positionAbsolute:
        x: 881.422233238284
        y: 328.41704746463733
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        dataset_ids:
        - c38e6777-d090-4532-81ab-fd4a15e60b20
        desc: ''
        isInIteration: true
        iteration_id: '1724671575189'
        multiple_retrieval_config:
          reranking_enable: true
          reranking_mode: weighted_score
          reranking_model:
            model: ''
            provider: ''
          score_threshold: null
          top_k: 10
          weights:
            keyword_setting:
              keyword_weight: 1
            vector_setting:
              embedding_model_name: 3large-CTC-ScheduleOpenAI
              embedding_provider_name: azure_openai
              vector_weight: 0
        query_variable_selector:
        - '1725426580641'
        - no_space_item
        retrieval_mode: multiple
        selected: false
        title: 参加者をキーワード検索
        type: knowledge-retrieval
      extent: parent
      height: 92
      id: '1732143228684'
      parentId: '1724671575189'
      position:
        x: 419.2588988734078
        y: 90.7411011265923
      positionAbsolute:
        x: 2947.2603897614
        y: 497.0716205427806
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
      zIndex: 1002
    - data:
        dataset_ids:
        - fdb5a2b0-110e-48bf-977a-7809b9a17aea
        desc: キーワード検索が0件であった場合に、「自動車の○○」等抽象的な指定や名前間違えのようなケースに対応するためのハイブリット検索
        isInIteration: true
        iteration_id: '1724671575189'
        multiple_retrieval_config:
          reranking_enable: true
          reranking_mode: weighted_score
          reranking_model:
            model: ''
            provider: ''
          score_threshold: null
          top_k: 10
          weights:
            keyword_setting:
              keyword_weight: 0.9
            vector_setting:
              embedding_model_name: 3large-CTC-ScheduleOpenAI
              embedding_provider_name: azure_openai
              vector_weight: 0.1
        query_variable_selector:
        - '1724671575189'
        - item
        retrieval_mode: multiple
        selected: false
        title: 参加者をハイブリット検索
        type: knowledge-retrieval
      extent: parent
      height: 152
      id: '1732143337675'
      parentId: '1724671575189'
      position:
        x: 1063.9712645762743
        y: 89.17515903740923
      positionAbsolute:
        x: 3591.9727554642664
        y: 495.5056784535975
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
      zIndex: 1002
    - data:
        cases:
        - case_id: 'true'
          conditions:
          - comparison_operator: is
            id: 29339e0f-6594-48fc-b7ad-9df490a052e3
            value: 'True'
            varType: string
            variable_selector:
            - '1729403585014'
            - adjustment_times_flag
          id: 'true'
          logical_operator: and
        desc: ''
        selected: false
        title: 調整対象の予定は抽出されたか？
        type: if-else
      height: 126
      id: '1732144330538'
      position:
        x: 3051.2140789217337
        y: 3356.2103714159043
      positionAbsolute:
        x: 3051.2140789217337
        y: 3356.2103714159043
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        answer: '申し訳ありません。

          優先度の低い予定は見つかりませんでした。


          --------


          他にご希望や調整事項はございますか？


          --------

          **回答例**

          - 午後で調整したい

          - 10/23で探してほしい

          - 参加者のカレンダーで、優先度が低そうな予定を提示してほしい'
        desc: ''
        selected: false
        title: 優先度が低い予定は見つからなかった
        type: answer
        variables: []
      height: 184
      id: '1732144424631'
      position:
        x: 3406.754936811313
        y: 3504.771430597434
      positionAbsolute:
        x: 3406.754936811313
        y: 3504.771430597434
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        cases:
        - case_id: 'true'
          conditions:
          - comparison_operator: empty
            id: 00425a0b-c1d3-4698-91c4-a8505139fb9e
            value: ''
            varType: array[string]
            variable_selector:
            - '1731895655350'
            - output
          id: 'true'
          logical_operator: and
        desc: ''
        selected: false
        title: 検索結果は空か？
        type: if-else
      height: 126
      id: '1732153501305'
      position:
        x: 5401.969267461848
        y: 3356.2103714159043
      positionAbsolute:
        x: 5401.969267461848
        y: 3356.2103714159043
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        answer: '申し訳ありません。

          優先度の低い予定は見つかりませんでした。


          --------


          他にご希望や調整事項はございますか？


          --------

          **回答例**

          - 午後で調整したい

          - 10/23で探してほしい

          - 参加者のカレンダーで、優先度が低そうな予定を提示してほしい'
        desc: ''
        selected: false
        title: 優先度が低い予定は見つからなかった (1)
        type: answer
        variables: []
      height: 184
      id: '17321535881410'
      position:
        x: 6014.300202654581
        y: 3641.582136256608
      positionAbsolute:
        x: 6014.300202654581
        y: 3641.582136256608
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    viewport:
      x: -478.81351064706666
      y: -319.9503211079807
      zoom: 0.2500000000000004
